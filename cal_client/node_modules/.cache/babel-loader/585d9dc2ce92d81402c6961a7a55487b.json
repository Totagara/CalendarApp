{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, Schedule, EventSettingsModel, Day, Week, Month, Agenda } from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const [entries, setEntries] = useState([]);\n  const [calDataSource, setCalDataSource] = useState([]); // const calData = {EventSettingsModel : {\n  //   dataSource : calDataSource\n  // }}\n\n  const getCalData = () => {\n    return EventSettingsModel = {\n      dataSource: calDataSource\n    };\n  };\n\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/calendar\").then(response => response.json()).then(res => {\n      console.log(\"Writing data\");\n\n      if (res && res.data) {\n        console.log(\"writing to entries\");\n        setEntries(res.data);\n      }\n    });\n  };\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\").then(response => response.json()).then(res => {\n      if (res && res.events) {\n        setCalDataSource(res.events);\n      }\n    });\n  };\n\n  const loadTempEvents = () => {\n    var coll = [];\n    coll.push({\n      StartTime: new Date(2020, 4, 3, 8, 30),\n      EndTime: new Date(2020, 4, 3, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 4, 6, 8, 30),\n      EndTime: new Date(2020, 4, 6, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 5, 3, 8, 30),\n      EndTime: new Date(2020, 5, 3, 10, 45)\n    });\n    setCalDataSource(coll);\n  };\n\n  const renderEntries = () => {\n    if (entries.length <= 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, \"no entries available\");\n    } else {\n      return entries.map((val, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }\n        }, \"Day: \", val.day, \", Available: \", val.available);\n      });\n    }\n  };\n\n  const addSyncfusionScheduler = () => {\n    // calData : EventSettingsModel = {\n    //   dataSource : calDataSource\n    // }\n    //alert(calDataSource);\n    //loadTempEvents();\n    var coll = [];\n    coll.push({\n      StartTime: new Date(2020, 4, 3, 8, 30),\n      EndTime: new Date(2020, 4, 3, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 4, 6, 8, 30),\n      EndTime: new Date(2020, 4, 6, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 5, 3, 8, 30),\n      EndTime: new Date(2020, 5, 3, 10, 45)\n    }); //Check eventlisterners for Add, delete, edit\n\n    /*let scheduleObj = new Schedule({\n      height: '550px',\n      selectedDate: new Date(2018, 1, 15),\n      views: ['Day', 'Week', 'WorkWeek', 'Month'],\n      eventSettings: {\n          dataSource: scheduleData\n      }\n    });\n    scheduleObj.appendTo('#Schedule');\n    scheduleObj.addEvent*/\n    //setCalDataSource(coll);\n    //return <ScheduleComponent currentView='Week' eventSettings={{dataSource: coll}}>\n    // return <ScheduleComponent currentView='Week' eventSettings={{dataSource: calDataSource}}>\n    //   <Inject services={[Day, Week, Month, Agenda]} />\n    // </ScheduleComponent>\n    //Old code\n\n    /*return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' eventSettings={{dataSource: calDataSource}} >\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)*/\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"add\",\n      title: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"edit\",\n      title: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"delete\",\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      eventSettings: {\n        dataSource: coll\n      },\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = () => {\n    //alert(\"test\");\n    if (args.type === 'Editor') {\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons;\n\n      if (args.target.classList.contains('e-appointment')) {\n        this.currentEvent = this.scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: this.editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: this.eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: this.dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: this.eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: this.dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }; //fetchData();\n  //fetchEvents();\n  //loadTempEvents();\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js"],"names":["React","useState","Inject","ScheduleComponent","Schedule","EventSettingsModel","Day","Week","Month","Agenda","ButtonComponent","App","entries","setEntries","calDataSource","setCalDataSource","getCalData","dataSource","fetchData","fetch","then","response","json","res","console","log","data","fetchEvents","events","loadTempEvents","coll","push","StartTime","Date","EndTime","renderEntries","length","map","val","key","day","available","addSyncfusionScheduler","openPopUp","bind","args","type","dialogObj","element","ej2_instances","buttons","target","classList","contains","currentEvent","scheduleObj","getEventDetails","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","dialogClose","eventAdd","dataBind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,EAAmCC,QAAnC,EAA6CC,kBAA7C,EAAiEC,GAAjE,EAAsEC,IAAtE,EAA4EC,KAA5E,EAAmFC,MAAnF,QAAgG,gCAAhG;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,SAASC,GAAT,GAAe;AAEb,QAAK,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAArC;AACA,QAAK,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAjD,CAHa,CAKb;AACA;AACA;;AAIA,QAAMe,UAAU,GAAG,MAAM;AACvB,WAAOX,kBAAkB,GAAG;AAC1BY,MAAAA,UAAU,EAAGH;AADa,KAA5B;AAGD,GAJD;;AAMA,QAAMI,SAAS,GAAG,MAAM;AACtBC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACA,UAAGF,GAAG,IAAIA,GAAG,CAACG,IAAd,EAAmB;AACjBF,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAZ,QAAAA,UAAU,CAACU,GAAG,CAACG,IAAL,CAAV;AACD;AACF,KARD;AASD,GAVD;;AAYA,QAAMC,WAAW,GAAG,MAAM;AACxBR,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,GAAG,IAAI;AACX,UAAGA,GAAG,IAAIA,GAAG,CAACK,MAAd,EAAqB;AACnBb,QAAAA,gBAAgB,CAACQ,GAAG,CAACK,MAAL,CAAhB;AACD;AACF,KAND;AAOD,GARD;;AAUA,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,IAAL,CACE;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACEC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB;AADX,KADF;AAIEH,IAAAA,IAAI,CAACC,IAAL,CACA;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACEC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB;AADX,KADA;AAIAH,IAAAA,IAAI,CAACC,IAAL,CACE;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACAC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB;AADT,KADF;AAIAlB,IAAAA,gBAAgB,CAACe,IAAD,CAAhB;AACH,GAfD;;AAiBA,QAAMK,aAAa,GAAG,MAAM;AAC1B,QAAGvB,OAAO,CAACwB,MAAR,IAAkB,CAArB,EAAuB;AACrB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAR;AACD,KAFD,MAEO;AACL,aAAOxB,OAAO,CAACyB,GAAR,CAAY,CAACC,GAAD,EAAMC,GAAN,KAAc;AAC/B,4BAAO;AAAK,UAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAqBD,GAAG,CAACE,GAAzB,mBAA2CF,GAAG,CAACG,SAA/C,CAAP;AACD,OAFM,CAAP;AAGD;AACF,GARD;;AAUA,QAAMC,sBAAsB,GAAG,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA,QAAIZ,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,CAACC,IAAL,CACE;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACEC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB;AADX,KADF;AAIEH,IAAAA,IAAI,CAACC,IAAL,CACA;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACEC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB;AADX,KADA;AAIAH,IAAAA,IAAI,CAACC,IAAL,CACE;AAAEC,MAAAA,SAAS,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,EAAxB,CAAb;AACAC,MAAAA,OAAO,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,EAAzB;AADT,KADF,EAfiC,CAoBjC;;AACA;;;;;;;;;;AAWA;AAEF;AACA;AACA;AACA;AAEA;;AACA;;;;;;;;;AASA,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,KAApB;AAA0B,MAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADM,eAEN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,QAApB;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHM,eAIN,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAC,MAA/B;AACA,MAAA,aAAa,EAAE;AAAChB,QAAAA,UAAU,EAAEa;AAAb,OADf;AAEA,MAAA,SAAS,EAAIa,SAAS,CAACC,IAAV,CAAe,IAAf,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACtC,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,MAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CAJM,CAAR;AAWD,GA5DD;;AA8DA,QAAMkC,SAAS,GAAG,MAAM;AACtB;AACA,QAAIE,IAAI,CAACC,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,SAAS,GAAIF,IAAI,CAACG,OAAN,CAAeC,aAAf,CAA6B,CAA7B,CAAhB;AACA,UAAIC,OAAJ;;AACA,UAAIL,IAAI,CAACM,MAAL,CAAYC,SAAZ,CAAsBC,QAAtB,CAA+B,eAA/B,CAAJ,EAAqD;AACnD,aAAKC,YAAL,GAAoB,KAAKC,WAAL,CAAiBC,eAAjB,CAAiCX,IAAI,CAACM,MAAtC,CAApB;AACAD,QAAAA,OAAO,GAAG,CAAC;AACTO,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WADJ;AAC0CC,UAAAA,KAAK,EAAE,KAAKC,SAAL,CAAejB,IAAf,CAAoB,IAApB;AADjD,SAAD,EAEP;AACDa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADZ;AAC+DF,UAAAA,KAAK,EAAE,KAAKG,WAAL,CAAiBnB,IAAjB,CAAsB,IAAtB;AADtE,SAFO,EAKV;AACEa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADf;AACkEF,UAAAA,KAAK,EAAE,KAAKI,WAAL,CAAiBpB,IAAjB,CAAsB,IAAtB;AADzE,SALU,CAAV;AAQD,OAVD,MAUO;AACLM,QAAAA,OAAO,GAAG,CAAC;AACTO,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WADJ;AAC0CC,UAAAA,KAAK,EAAE,KAAKK,QAAL,CAAcrB,IAAd,CAAmB,IAAnB;AADjD,SAAD,EAEP;AACDa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADZ;AAC+DF,UAAAA,KAAK,EAAE,KAAKI,WAAL,CAAiBpB,IAAjB,CAAsB,IAAtB;AADtE,SAFO,CAAV;AAKD;;AACDG,MAAAA,SAAS,CAACG,OAAV,GAAoBA,OAApB;AACAH,MAAAA,SAAS,CAACmB,QAAV;AACD;AACF,GAzBD,CAhIa,CA2Jb;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMxB,sBAAsB,EAA5B,CAFF,CADF;AAMD;;AAED,eAAe/B,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, Schedule, EventSettingsModel, Day, Week, Month, Agenda} from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n\n  const[entries, setEntries] = useState([]);\n  const[calDataSource, setCalDataSource] = useState([]);\n\n  // const calData = {EventSettingsModel : {\n  //   dataSource : calDataSource\n  // }}\n\n  \n\n  const getCalData = () => {\n    return EventSettingsModel = {\n      dataSource : calDataSource\n    }\n  }\n\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/calendar\")\n    .then(response => response.json())\n    .then(res => {\n      console.log(\"Writing data\");\n      if(res && res.data){\n        console.log(\"writing to entries\");\n        setEntries(res.data);\n      }\n    });\n  }\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\")\n    .then(response => response.json())\n    .then(res => {\n      if(res && res.events){\n        setCalDataSource(res.events);\n      }\n    });\n  }\n\n  const loadTempEvents = () => {\n    var coll = [];\n    coll.push(\n      { StartTime: new Date(2020, 4, 3, 8, 30),\n        EndTime: new Date(2020, 4,3, 10, 45)\n      });\n      coll.push(\n      { StartTime: new Date(2020, 4, 6, 8, 30),\n        EndTime: new Date(2020, 4, 6, 10, 45)\n      });\n      coll.push(\n        { StartTime: new Date(2020, 5, 3, 8, 30),\n        EndTime: new Date(2020, 5, 3, 10, 45)\n      });\n      setCalDataSource(coll);\n  }\n\n  const renderEntries = () => {\n    if(entries.length <= 0){\n      return (<div>no entries available</div>);\n    } else {\n      return entries.map((val, key) => {\n        return <div key={key}>Day: {val.day}, Available: {val.available}</div>\n      });\n    }\n  }\n\n  const addSyncfusionScheduler = () => {\n    // calData : EventSettingsModel = {\n    //   dataSource : calDataSource\n    // }\n    //alert(calDataSource);\n    //loadTempEvents();\n    var coll = [];\n    coll.push(\n      { StartTime: new Date(2020, 4, 3, 8, 30),\n        EndTime: new Date(2020, 4,3, 10, 45)\n      });\n      coll.push(\n      { StartTime: new Date(2020, 4, 6, 8, 30),\n        EndTime: new Date(2020, 4, 6, 10, 45)\n      });\n      coll.push(\n        { StartTime: new Date(2020, 5, 3, 8, 30),\n        EndTime: new Date(2020, 5, 3, 10, 45)\n      });\n\n      //Check eventlisterners for Add, delete, edit\n      /*let scheduleObj = new Schedule({\n        height: '550px',\n        selectedDate: new Date(2018, 1, 15),\n        views: ['Day', 'Week', 'WorkWeek', 'Month'],\n        eventSettings: {\n            dataSource: scheduleData\n        }\n      });\n      scheduleObj.appendTo('#Schedule');\n      scheduleObj.addEvent*/\n\n      //setCalDataSource(coll);\n\n    //return <ScheduleComponent currentView='Week' eventSettings={{dataSource: coll}}>\n    // return <ScheduleComponent currentView='Week' eventSettings={{dataSource: calDataSource}}>\n    //   <Inject services={[Day, Week, Month, Agenda]} />\n    // </ScheduleComponent>\n\n    //Old code\n    /*return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' eventSettings={{dataSource: calDataSource}} >\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)*/\n\n    return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' \n      eventSettings={{dataSource: coll}} \n      popupOpen = {openPopUp.bind(this)} >\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n    \n  }\n\n  const openPopUp = () => {\n    //alert(\"test\");\n    if (args.type === 'Editor') {\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n      if (args.target.classList.contains('e-appointment')) {\n        this.currentEvent = this.scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: this.editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: this.eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: this.dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: this.eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: this.dialogClose.bind(this)\n        }];\n      }\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n  //fetchData();\n  //fetchEvents();\n  //loadTempEvents();\n  \n  return (\n    <div className=\"App\">\n      {/* <div>{renderEntries()}</div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}