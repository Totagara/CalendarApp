{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [calDataSource, setCalDataSource] = useState([]); //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events';\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\").then(response => response.json()).then(res => {\n      //alert(\"Results from server: \" + JSON.stringify(res.events));\n      if (res && res.events) {\n        setEvents(res.events);\n      }\n    });\n  }; //const addEventToServer = (eventData, scheduleObj) => {\n\n\n  const addEventToServer = eventData => {\n    //var id = eventData.id;\n    var eventObj = getEventObject(eventData);\n    eventData.Id = scheduleObj.eventBase.getEventMaxID() + 1;\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(eventData)\n    }).then(() => {\n      scheduleObj.addEvent(eventData);\n      alert(\"added event to server\");\n    }).catch(alert(\"Error while adding event to server\"));\n    dialogClose();\n  };\n\n  const updateEventToServer = (currentEvent, curSchedule) => {\n    const eventData = curSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    var id = currentEvent.Id;\n    var bodyStr = JSON.stringify(eventData);\n    fetch(domain + '/?id=' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: bodyStr\n    }).then((err, data) => {\n      curSchedule.saveEvent(eventData);\n      alert(\"Updated event to server\");\n    }).catch(err => {\n      alert(\"Error while Updating event to server\");\n    });\n  }; //const deleteEventInServer = (eventData, scheduleObj) => {\n\n\n  const deleteEventInServer = eventData => {\n    var id = eventData.id;\n    fetch(domain + '/id=' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      scheduleObj.deleteEvent(eventData);\n      alert(\"Deleted event in server\");\n    }).catch(alert(\"Error while Deleting event to server\"));\n  };\n\n  const addSyncfusionScheduler = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"add\",\n      title: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"edit\",\n      title: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"delete\",\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: events\n      },\n      showQuickInfo: false,\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    //alert(\"test\");\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo' ? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons;\n\n      if (args.target.classList.contains('e-appointment')) {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventDelete = e => {\n    var tes = currentSchedule;\n    const eventData = scheduleObj.activeEventData.event;\n    deleteEventInServer(eventData, scheduleObj);\n    dialogClose();\n  };\n\n  const eventAdd = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = currentSchedule.eventBase.getEventMaxID() + 1;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const editEvent = e => {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide();\n    alert(\" Event clsoed\");\n  };\n\n  fetchEvents();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js"],"names":["React","useState","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","Resize","DragAndDrop","ButtonComponent","App","events","setEvents","calDataSource","setCalDataSource","scheduleObj","currentEvent","currentSchedule","domain","fetchEvents","fetch","then","response","json","res","addEventToServer","eventData","eventObj","getEventObject","Id","eventBase","getEventMaxID","method","headers","body","JSON","stringify","addEvent","alert","catch","dialogClose","updateEventToServer","curSchedule","eventWindow","getObjectFromFormData","RecurrenceRule","document","querySelector","ej2_instances","value","id","bodyStr","err","data","saveEvent","deleteEventInServer","deleteEvent","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","getEventDetails","target","dialogObj","element","buttons","classList","contains","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","eventAdd","dataBind","e","tes","activeEventData","event","hide"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const[events, setEvents] = useState([]);\n  const[calDataSource, setCalDataSource] = useState([]);\n  //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events'\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\")\n    .then(response => response.json())\n    .then(res => {\n      //alert(\"Results from server: \" + JSON.stringify(res.events));\n      if(res && res.events){\n        setEvents(res.events);\n      }\n    });\n  }\n\n  //const addEventToServer = (eventData, scheduleObj) => {\n  const addEventToServer = (eventData) => {\n    //var id = eventData.id;\n    var eventObj = getEventObject(eventData);\n    eventData.Id = scheduleObj.eventBase.getEventMaxID() + 1;\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(eventData)\n    })\n    .then(() => {\n      scheduleObj.addEvent(eventData);\n      alert(\"added event to server\");\n    })\n    .catch(alert(\"Error while adding event to server\"));\n    dialogClose();\n  }\n\n  const updateEventToServer = (currentEvent, curSchedule) => {\n    const eventData = curSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    var id = currentEvent.Id;\n    var bodyStr = JSON.stringify(eventData);\n    fetch(domain + '/?id='+id, {\n      method: 'PUT',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n      body: bodyStr\n    })\n    .then((err, data) => {\n      curSchedule.saveEvent(eventData);\n      alert(\"Updated event to server\");\n    })\n    .catch((err) => {\n      alert(\"Error while Updating event to server\");\n    });\n  }\n\n  //const deleteEventInServer = (eventData, scheduleObj) => {\n  const deleteEventInServer = (eventData) => {\n    var id = eventData.id;\n    fetch(domain + '/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(() => {\n      scheduleObj.deleteEvent(eventData);\n      alert(\"Deleted event in server\");\n    })\n    .catch(alert(\"Error while Deleting event to server\"));\n  }\n\n  const addSyncfusionScheduler = () => {\n    return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: events}} \n      showQuickInfo={false} \n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n  }\n\n  const openPopUp = (args) => {\n    //alert(\"test\");\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo'? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n      if (args.target.classList.contains('e-appointment')) {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      \n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n   const eventDelete = (e)=> {\n    var tes = currentSchedule;\n    const eventData = scheduleObj.activeEventData.event;\n    deleteEventInServer(eventData, scheduleObj);\n    dialogClose();\n  }\n\n  const eventAdd = (e) => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = currentSchedule.eventBase.getEventMaxID() + 1;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const editEvent = (e)=> {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n    alert(\" Event clsoed\");\n  }\n\n  fetchEvents();\n  return (\n    <div className=\"App\">\n      {/* <div>{renderEntries()}</div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}