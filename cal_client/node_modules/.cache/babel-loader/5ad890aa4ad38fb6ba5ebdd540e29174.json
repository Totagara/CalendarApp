{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const [entries, setEntries] = useState([]);\n  const [calDataSource, setCalDataSource] = useState([]); //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj;\n\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/calendar\").then(response => response.json()).then(res => {\n      console.log(\"Writing data\");\n\n      if (res && res.data) {\n        console.log(\"writing to entries\");\n        setEntries(res.data);\n      }\n    });\n  };\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\").then(response => response.json()).then(res => {\n      if (res && res.events) {\n        setCalDataSource(res.events);\n      }\n    });\n  };\n\n  const loadTempEvents = () => {\n    var coll = [];\n    coll.push({\n      StartTime: new Date(2020, 4, 3, 8, 30),\n      EndTime: new Date(2020, 4, 3, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 4, 6, 8, 30),\n      EndTime: new Date(2020, 4, 6, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 5, 3, 8, 30),\n      EndTime: new Date(2020, 5, 3, 10, 45)\n    });\n    setCalDataSource(coll);\n  };\n\n  const renderEntries = () => {\n    if (entries.length <= 0) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, \"no entries available\");\n    } else {\n      return entries.map((val, key) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }\n        }, \"Day: \", val.day, \", Available: \", val.available);\n      });\n    }\n  };\n\n  const addSyncfusionScheduler = () => {\n    // calData : EventSettingsModel = {\n    //   dataSource : calDataSource\n    // }\n    //alert(calDataSource);\n    //loadTempEvents();\n    var coll = [];\n    coll.push({\n      StartTime: new Date(2020, 4, 3, 8, 30),\n      EndTime: new Date(2020, 4, 3, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 4, 6, 8, 30),\n      EndTime: new Date(2020, 4, 6, 10, 45)\n    });\n    coll.push({\n      StartTime: new Date(2020, 5, 3, 8, 30),\n      EndTime: new Date(2020, 5, 3, 10, 45)\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"add\",\n      title: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"edit\",\n      title: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"delete\",\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\" //ref={schedule => setScheduleObj(schedule)} \n      ,\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: coll\n      },\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    //alert(\"test\");\n    if (args.type === 'Editor') {\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons;\n\n      if (args.target.classList.contains('e-appointment')) {\n        //this.currentEvent = scheduleObj.getEventDetails(args.target);\n        this.currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventAdd = e => {\n    const data = scheduleObj.getCellDetails(scheduleObj.getSelectedElements());\n    const eventData = scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = scheduleObj.eventBase.getEventMaxID() + 1;\n    scheduleObj.addEvent(eventData);\n    dialogClose();\n    alert(\"add Event called\");\n  };\n\n  const eventDelete = e => {\n    const eventData = scheduleObj.activeEventData.event;\n    scheduleObj.deleteEvent(eventData);\n    dialogClose();\n    alert(\"delete Event called\");\n  };\n\n  const editEvent = e => {\n    const eventData = scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = this.currentEvent.Id;\n    scheduleObj.saveEvent(eventData);\n    dialogClose();\n    alert(\"edit Event called\");\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide();\n    alert(\" Event clsoed\");\n  }; //fetchEvents();\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js"],"names":["React","useState","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","Resize","DragAndDrop","ButtonComponent","App","entries","setEntries","calDataSource","setCalDataSource","scheduleObj","fetchData","fetch","then","response","json","res","console","log","data","fetchEvents","events","loadTempEvents","coll","push","StartTime","Date","EndTime","renderEntries","length","map","val","key","day","available","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","dialogObj","element","ej2_instances","buttons","target","classList","contains","currentEvent","getEventDetails","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","dialogClose","eventAdd","dataBind","e","getCellDetails","getSelectedElements","eventData","eventWindow","getObjectFromFormData","Id","eventBase","getEventMaxID","addEvent","alert","activeEventData","event","deleteEvent","saveEvent","document","querySelector","hide"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n\n  const[entries, setEntries] = useState([]);\n  const[calDataSource, setCalDataSource] = useState([]);\n  //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj;\n\n  const fetchData = () => {\n    fetch(\"http://localhost:3000/calendar\")\n    .then(response => response.json())\n    .then(res => {\n      console.log(\"Writing data\");\n      if(res && res.data){\n        console.log(\"writing to entries\");\n        setEntries(res.data);\n      }\n    });\n  }\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\")\n    .then(response => response.json())\n    .then(res => {\n      if(res && res.events){\n        setCalDataSource(res.events);\n      }\n    });\n  }\n\n  const loadTempEvents = () => {\n    var coll = [];\n    coll.push(\n      { StartTime: new Date(2020, 4, 3, 8, 30),\n        EndTime: new Date(2020, 4,3, 10, 45)\n      });\n      coll.push(\n      { StartTime: new Date(2020, 4, 6, 8, 30),\n        EndTime: new Date(2020, 4, 6, 10, 45)\n      });\n      coll.push(\n        { StartTime: new Date(2020, 5, 3, 8, 30),\n        EndTime: new Date(2020, 5, 3, 10, 45)\n      });\n      setCalDataSource(coll);\n  }\n\n  const renderEntries = () => {\n    if(entries.length <= 0){\n      return (<div>no entries available</div>);\n    } else {\n      return entries.map((val, key) => {\n        return <div key={key}>Day: {val.day}, Available: {val.available}</div>\n      });\n    }\n  }\n\n  const addSyncfusionScheduler = () => {\n    // calData : EventSettingsModel = {\n    //   dataSource : calDataSource\n    // }\n    //alert(calDataSource);\n    //loadTempEvents();\n    var coll = [];\n    coll.push(\n      { StartTime: new Date(2020, 4, 3, 8, 30),\n        EndTime: new Date(2020, 4,3, 10, 45)\n      });\n      coll.push(\n      { StartTime: new Date(2020, 4, 6, 8, 30),\n        EndTime: new Date(2020, 4, 6, 10, 45)\n      });\n      coll.push(\n        { StartTime: new Date(2020, 5, 3, 8, 30),\n        EndTime: new Date(2020, 5, 3, 10, 45)\n      });\n\n    return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' \n      //ref={schedule => setScheduleObj(schedule)} \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: coll}} \n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n    \n  }\n\n  const openPopUp = (args) => {\n    //alert(\"test\");\n    if (args.type === 'Editor') {\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n      if (args.target.classList.contains('e-appointment')) {\n        //this.currentEvent = scheduleObj.getEventDetails(args.target);\n        this.currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n  const eventAdd = (e) => {\n    const data = scheduleObj.getCellDetails(scheduleObj.getSelectedElements());\n    const eventData = scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = scheduleObj.eventBase.getEventMaxID() + 1;\n    scheduleObj.addEvent(eventData);\n    dialogClose();\n    alert(\"add Event called\");\n  }\n  const eventDelete = (e)=> {\n    const eventData = scheduleObj.activeEventData.event;\n    scheduleObj.deleteEvent(eventData);\n    dialogClose();\n    alert(\"delete Event called\");\n  }\n\n  const editEvent = (e)=> {\n    const eventData = scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.Id = this.currentEvent.Id;\n    scheduleObj.saveEvent(eventData);\n    dialogClose();\n    alert(\"edit Event called\");\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n    alert(\" Event clsoed\");\n  }\n\n  //fetchEvents();\n  return (\n    <div className=\"App\">\n      {/* <div>{renderEntries()}</div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}