{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport './index.css';\nimport { ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { extend } from '@syncfusion/ej2-base';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\nimport * as dataSource from './datasource.json';\n/**\n * Schedule Default sample\n */\n\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.data = extend([], dataSource.scheduleData, null, true); //this.currentEvent;\n  }\n\n  eventAdd(e) {\n    alert(\"add\"); // const data = this.scheduleObj.getCellDetails(this.scheduleObj.getSelectedElements());\n    // const eventData = this.scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    // eventData.Id = this.scheduleObj.eventBase.getEventMaxID() + 1;\n    // this.scheduleObj.addEvent(eventData);\n    // this.dialogClose();\n  }\n\n  eventDelete(e) {\n    alert(\"delete\"); // const eventData = this.scheduleObj.activeEventData.event;\n    // this.scheduleObj.deleteEvent(eventData);\n    // this.dialogClose();\n  }\n\n  editEvent(e) {\n    alert(\"edit\"); // const eventData = this.scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    // eventData.Id = this.currentEvent.Id;\n    // this.scheduleObj.saveEvent(eventData);\n    // this.dialogClose();\n  }\n\n  dialogClose() {\n    alert(\"close\"); // let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    // dialogObj.hide();\n  }\n\n  onPopupOpen(args) {\n    if (args.type === 'Editor') {\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons;\n\n      if (args.target.classList.contains('e-appointment')) {\n        this.currentEvent = this.scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: this.editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: this.eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: this.dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: this.eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: this.dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"schedule-control-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-lg-9 control-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ScheduleComponent, {\n      height: \"650px\",\n      ref: schedule => this.scheduleObj = schedule,\n      selectedDate: new Date(2019, 0, 10),\n      eventSettings: {\n        dataSource: this.data\n      },\n      popupOpen: this.onPopupOpen.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"WorkWeek\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Agenda\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js"],"names":["React","Component","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","WorkWeek","Month","Agenda","Inject","Resize","DragAndDrop","extend","DatePickerComponent","SampleBase","PropertyPane","dataSource","App","constructor","arguments","data","scheduleData","eventAdd","e","alert","eventDelete","editEvent","dialogClose","onPopupOpen","args","type","dialogObj","element","ej2_instances","buttons","target","classList","contains","currentEvent","scheduleObj","getEventDetails","buttonModel","content","isPrimary","click","bind","cssClass","dataBind","render","schedule","Date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nimport './index.css';\nimport { ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, WorkWeek, Month, Agenda, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\n\nimport { extend } from '@syncfusion/ej2-base';\nimport { DatePickerComponent } from '@syncfusion/ej2-react-calendars';\nimport { SampleBase } from './sample-base';\nimport { PropertyPane } from './property-pane';\nimport * as dataSource from './datasource.json';\n/**\n * Schedule Default sample\n */\nexport class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.data = extend([], dataSource.scheduleData, null, true);\n    //this.currentEvent;\n  }\n  eventAdd(e) {\n    alert(\"add\");\n    // const data = this.scheduleObj.getCellDetails(this.scheduleObj.getSelectedElements());\n    // const eventData = this.scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    // eventData.Id = this.scheduleObj.eventBase.getEventMaxID() + 1;\n    // this.scheduleObj.addEvent(eventData);\n    // this.dialogClose();\n  }\n  eventDelete(e) {\n    alert(\"delete\");\n    // const eventData = this.scheduleObj.activeEventData.event;\n    // this.scheduleObj.deleteEvent(eventData);\n    // this.dialogClose();\n  }\n  editEvent(e) {\n    alert(\"edit\");\n    // const eventData = this.scheduleObj.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    // eventData.Id = this.currentEvent.Id;\n    // this.scheduleObj.saveEvent(eventData);\n    // this.dialogClose();\n  }\n  dialogClose() {\n    alert(\"close\");\n    // let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    // dialogObj.hide();\n  }\n  onPopupOpen(args) {\n    if (args.type === 'Editor') {\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n      if (args.target.classList.contains('e-appointment')) {\n        this.currentEvent = this.scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: this.editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: this.eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: this.dialogClose.bind(this)\n        }];\n      } else {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: this.eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: this.dialogClose.bind(this)\n        }];\n      }\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n  render() {\n    return (<div className='schedule-control-section'>\n      <div className='col-lg-9 control-section'>\n        <div className='control-wrapper'>\n          <ScheduleComponent height='650px' ref={schedule => this.scheduleObj = schedule} selectedDate={new Date(2019, 0, 10)} eventSettings={{ dataSource: this.data }} popupOpen={this.onPopupOpen.bind(this)}>\n            <ViewsDirective>\n              <ViewDirective option='Day' />\n              <ViewDirective option='Week' />\n              <ViewDirective option='WorkWeek' />\n              <ViewDirective option='Month' />\n              <ViewDirective option='Agenda' />\n            </ViewsDirective>\n            <Inject services={[Day, Week, WorkWeek, Month, Agenda, Resize, DragAndDrop]} />\n          </ScheduleComponent>\n        </div>\n      </div>\n    </div>);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}