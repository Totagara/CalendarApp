{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [calDataSource, setCalDataSource] = useState([]); //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events';\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\").then(response => response.json()).then(res => {\n      //alert(\"Results from server: \" + JSON.stringify(res.events));\n      if (res && res.data) {\n        var events = generateEventsSource(res.data); //setEvents(res.data);\n\n        setEvents(events);\n      }\n    });\n  };\n\n  const generateEventsSource = eventsColl => {\n    var events = [];\n    /* {\n      \"id\":\"e10ee28091a211eabad601fff75a3b91\",\n      \"subject\":\"dp2\",\n      \"description\":\"dp2-desc\",\n      \"location\":\"sf2\",\n      \"start\":\"Tue May 05 2020 08:00:00 GMT-0700 (Pacific Daylight Time)\",\n      \"end\":\"Tue May 05 2020 08:30:00 GMT-0700 (Pacific Daylight Time)\",\n      \"isRecurring\":null,\n      \"repeatPatter\":null,\n      \"repeatCount\":null\n    } */\n\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.id = element.id);\n      element.EndTime && (event.end = new Date(element.EndTime).toString());\n      element.StartTime && (event.start = new Date(element.StartTime).toString());\n      element.Subject && (event.subject = element.Subject);\n      element.Location && (event.location = element.Location);\n      element.Description && (event.description = element.Description);\n      element.RecurrenceRule && (event.isRecurring = true);\n      element.RecurrenceRule && (event.repeatPattern = element.RecurrenceRule);\n      return event;\n    });\n  };\n\n  const getEventObject = eventData => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = new Date(eventData.EndTime).toString());\n    eventData.StartTime && (event.start = new Date(eventData.StartTime).toString());\n    eventData.Subject && (event.subject = eventData.Subject);\n    eventData.Location && (event.location = eventData.Location);\n    eventData.Description && (event.description = eventData.Description);\n    eventData.RecurrenceRule && (event.isRecurring = true);\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule);\n    return event;\n  }; //const addEventToServer = (eventData, scheduleObj) => {\n\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData); //eventObj.id = currentSchedule.eventBase.getEventMaxID() + 1;\n    //var recPattern = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n\n    /* if(recPattern) {\n      eventObj.repeatPatter = recPattern\n    } */\n\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then(res => {\n      currentSchedule.addEvent(eventData); //alert(\"added event to server\");\n    }).catch(err => {\n      //alert(\"Error while adding event to server\");\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  };\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    /* var recPattern = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    if(recPattern) {\n      eventObj.repeatPatter = recPattern\n    } */\n\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id=' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then((err, data) => {\n      currentSchedule.saveEvent(eventData); //alert(\"Updated event to server\");\n    }).catch(err => {//alert(\"Error while Updating event to server\");\n    });\n  }; //const deleteEventInServer = (eventData, scheduleObj) => {\n\n\n  const deleteEventInServer = eventData => {\n    var id = eventData.id;\n    fetch(domain + '/id=' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      currentSchedule.deleteEvent(eventData); //alert(\"Deleted event in server\");\n    }).catch(err => {//alert(\"Error while Deleting event to server\")\n    });\n  };\n\n  const addSyncfusionScheduler = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"add\",\n      title: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"edit\",\n      title: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"delete\",\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: events\n      },\n      showQuickInfo: false,\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    //alert(\"test\");\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo' ? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons; //hide timezone and all day fields for now.\n\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n\n      if (args.target.classList.contains('e-appointment')) {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventDelete = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const eventAdd = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const editEvent = e => {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide(); //alert(\" Event clsoed\");\n  };\n\n  fetchEvents();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/cal_client/src/App.js"],"names":["React","useState","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","Resize","DragAndDrop","ButtonComponent","App","events","setEvents","calDataSource","setCalDataSource","scheduleObj","currentEvent","currentSchedule","domain","fetchEvents","fetch","then","response","json","res","data","generateEventsSource","eventsColl","forEach","element","event","id","EndTime","end","Date","toString","StartTime","start","Subject","subject","Location","location","Description","description","RecurrenceRule","isRecurring","repeatPattern","getEventObject","eventData","addEventToServer","eventObj","eventBody","JSON","stringify","method","headers","body","addEvent","catch","err","console","log","dialogClose","updateEventToServer","Id","saveEvent","deleteEventInServer","deleteEvent","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","getEventDetails","target","dialogObj","ej2_instances","buttons","document","querySelector","hidden","classList","contains","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","eventAdd","dataBind","e","tes","activeEventData","eventWindow","getObjectFromFormData","value","hide"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAAQC,MAAR,EAAgBC,iBAAhB,EAAmCC,cAAnC,EAAmDC,aAAnD,EAAkEC,GAAlE,EAAuEC,IAAvE,EAA6EC,KAA7E,EAAoFC,MAApF,EAA4FC,MAA5F,EAAoGC,WAApG,QAAsH,gCAAtH;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AAEA,SAASC,GAAT,GAAe;AACb,QAAK,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAK,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,EAAD,CAAjD,CAFa,CAGb;;AAEA,MAAIiB,WAAJ,EAAiBC,YAAjB,EAA+BC,eAA/B;AACA,MAAIC,MAAM,GAAG,uCAAb;;AAEA,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMG,GAAG,IAAI;AACX;AACA,UAAGA,GAAG,IAAIA,GAAG,CAACC,IAAd,EAAmB;AACjB,YAAId,MAAM,GAAGe,oBAAoB,CAACF,GAAG,CAACC,IAAL,CAAjC,CADiB,CAEjB;;AACAb,QAAAA,SAAS,CAACD,MAAD,CAAT;AACD;AACF,KATD;AAUD,GAXD;;AAaA,QAAMe,oBAAoB,GAAIC,UAAD,IAAgB;AAC3C,QAAIhB,MAAM,GAAG,EAAb;AACA;;;;;;;;;;;;AAWAgB,IAAAA,UAAU,CAACC,OAAX,CAAmBC,OAAO,IAAI;AAC5B,UAAIC,KAAK,GAAG,EAAZ;AACAD,MAAAA,OAAO,CAACE,EAAR,KAAeD,KAAK,CAACC,EAAN,GAAWF,OAAO,CAACE,EAAlC;AACAF,MAAAA,OAAO,CAACG,OAAR,KAAoBF,KAAK,CAACG,GAAN,GAAa,IAAIC,IAAJ,CAASL,OAAO,CAACG,OAAjB,CAAD,CAA4BG,QAA5B,EAAhC;AACAN,MAAAA,OAAO,CAACO,SAAR,KAAsBN,KAAK,CAACO,KAAN,GAAe,IAAIH,IAAJ,CAASL,OAAO,CAACO,SAAjB,CAAD,CAA8BD,QAA9B,EAApC;AACAN,MAAAA,OAAO,CAACS,OAAR,KAAoBR,KAAK,CAACS,OAAN,GAAgBV,OAAO,CAACS,OAA5C;AACAT,MAAAA,OAAO,CAACW,QAAR,KAAqBV,KAAK,CAACW,QAAN,GAAiBZ,OAAO,CAACW,QAA9C;AACAX,MAAAA,OAAO,CAACa,WAAR,KAAwBZ,KAAK,CAACa,WAAN,GAAoBd,OAAO,CAACa,WAApD;AACAb,MAAAA,OAAO,CAACe,cAAR,KAA2Bd,KAAK,CAACe,WAAN,GAAoB,IAA/C;AACAhB,MAAAA,OAAO,CAACe,cAAR,KAA2Bd,KAAK,CAACgB,aAAN,GAAsBjB,OAAO,CAACe,cAAzD;AACA,aAAOd,KAAP;AACD,KAXD;AAYD,GAzBD;;AA2BA,QAAMiB,cAAc,GAAIC,SAAD,IAAe;AACpC,QAAIlB,KAAK,GAAG,EAAZ;AACAkB,IAAAA,SAAS,CAACjB,EAAV,KAAiBD,KAAK,CAACC,EAAN,GAAWiB,SAAS,CAACjB,EAAtC;AACAiB,IAAAA,SAAS,CAAChB,OAAV,KAAsBF,KAAK,CAACG,GAAN,GAAa,IAAIC,IAAJ,CAASc,SAAS,CAAChB,OAAnB,CAAD,CAA8BG,QAA9B,EAAlC;AACAa,IAAAA,SAAS,CAACZ,SAAV,KAAwBN,KAAK,CAACO,KAAN,GAAe,IAAIH,IAAJ,CAASc,SAAS,CAACZ,SAAnB,CAAD,CAAgCD,QAAhC,EAAtC;AACAa,IAAAA,SAAS,CAACV,OAAV,KAAsBR,KAAK,CAACS,OAAN,GAAgBS,SAAS,CAACV,OAAhD;AACAU,IAAAA,SAAS,CAACR,QAAV,KAAuBV,KAAK,CAACW,QAAN,GAAiBO,SAAS,CAACR,QAAlD;AACAQ,IAAAA,SAAS,CAACN,WAAV,KAA0BZ,KAAK,CAACa,WAAN,GAAoBK,SAAS,CAACN,WAAxD;AACAM,IAAAA,SAAS,CAACJ,cAAV,KAA6Bd,KAAK,CAACe,WAAN,GAAoB,IAAjD;AACAG,IAAAA,SAAS,CAACJ,cAAV,KAA6Bd,KAAK,CAACgB,aAAN,GAAsBE,SAAS,CAACJ,cAA7D;AACA,WAAOd,KAAP;AACD,GAXD,CAhDa,CA6Db;;;AACA,QAAMmB,gBAAgB,GAAG,CAACD,SAAD,EAAY/B,eAAZ,KAAgC;AACvD,QAAIiC,QAAQ,GAAGH,cAAc,CAACC,SAAD,CAA7B,CADuD,CAEvD;AACA;;AACA;;;;AAGA,QAAIG,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAhB;AACA9B,IAAAA,KAAK,CAACF,MAAD,EAAS;AACZoC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT,OAFG;AAMZC,MAAAA,IAAI,EAAEL;AANM,KAAT,CAAL,CAQC9B,IARD,CAQOG,GAAD,IAAS;AACbP,MAAAA,eAAe,CAACwC,QAAhB,CAAyBT,SAAzB,EADa,CAEb;AACD,KAXD,EAYCU,KAZD,CAYQC,GAAD,IAAS;AACd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;AACD,KAfD;AAgBAG,IAAAA,WAAW;AACZ,GAzBD;;AA2BA,QAAMC,mBAAmB,GAAG,CAACf,SAAD,EAAY/B,eAAZ,KAAgC;AAC1D,QAAIc,EAAE,GAAGf,YAAY,CAACgD,EAAtB;AACA,QAAId,QAAQ,GAAGH,cAAc,CAACC,SAAD,CAA7B;AACAE,IAAAA,QAAQ,CAACnB,EAAT,GAAcA,EAAd;AACA;;;;;AAIA,QAAIoB,SAAS,GAAGC,IAAI,CAACC,SAAL,CAAeH,QAAf,CAAhB;AACA9B,IAAAA,KAAK,CAACF,MAAM,GAAG,OAAT,GAAiBa,EAAlB,EAAsB;AACzBuB,MAAAA,MAAM,EAAE,KADiB;AAExBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFe;AAKzBC,MAAAA,IAAI,EAAEL;AALmB,KAAtB,CAAL,CAOC9B,IAPD,CAOM,CAACsC,GAAD,EAAMlC,IAAN,KAAe;AACnBR,MAAAA,eAAe,CAACgD,SAAhB,CAA0BjB,SAA1B,EADmB,CAEnB;AACD,KAVD,EAWCU,KAXD,CAWQC,GAAD,IAAS,CACd;AACD,KAbD;AAcD,GAvBD,CAzFa,CAkHb;;;AACA,QAAMO,mBAAmB,GAAIlB,SAAD,IAAe;AACzC,QAAIjB,EAAE,GAAGiB,SAAS,CAACjB,EAAnB;AACAX,IAAAA,KAAK,CAACF,MAAM,GAAG,MAAT,GAAgBa,EAAjB,EAAqB;AACxBuB,MAAAA,MAAM,EAAE,QADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAFe,KAArB,CAAL,CAOClC,IAPD,CAOM,MAAM;AACVJ,MAAAA,eAAe,CAACkD,WAAhB,CAA4BnB,SAA5B,EADU,CAEV;AACD,KAVD,EAWCU,KAXD,CAWQC,GAAD,IAAS,CACd;AACD,KAbD;AAcD,GAhBD;;AAkBA,QAAMS,sBAAsB,GAAG,MAAM;AACnC,wBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,KAApB;AAA0B,MAAA,KAAK,EAAC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADM,eAEN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,MAApB;AAA2B,MAAA,KAAK,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFM,eAGN,oBAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,QAApB;AAA6B,MAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHM,eAIN,oBAAC,iBAAD;AAAmB,MAAA,WAAW,EAAC,MAA/B;AACA,MAAA,GAAG,EAAEC,QAAQ,IAAItD,WAAW,GAAGsD,QAD/B;AAEA,MAAA,aAAa,EAAE;AAACC,QAAAA,UAAU,EAAE3D;AAAb,OAFf;AAGA,MAAA,aAAa,EAAE,KAHf;AAIA,MAAA,SAAS,EAAI4D,SAAS,CAACC,IAAV,CAAe,IAAf,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKA,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CALA,eAUA,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,CAACrE,GAAD,EAAMC,IAAN,EAAYC,KAAZ,EAAmBC,MAAnB,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVA,CAJM,CAAR;AAiBD,GAlBD;;AAoBA,QAAMiE,SAAS,GAAIE,IAAD,IAAU;AAC1B;AACA,QAAIA,IAAI,CAACC,IAAL,KAAc,QAAd,IAA0BD,IAAI,CAACC,IAAL,KAAc,WAA5C,EAAyD;AACvDzD,MAAAA,eAAe,GAAGF,WAAlB;AACAC,MAAAA,YAAY,GAAGyD,IAAI,CAACC,IAAL,KAAc,WAAd,GAA2B3D,WAAW,CAAC4D,eAAZ,CAA4BF,IAAI,CAACG,MAAjC,CAA3B,GAAsEH,IAAI,CAAChD,IAA1F;AACA,UAAIoD,SAAS,GAAIJ,IAAI,CAAC5C,OAAN,CAAeiD,aAAf,CAA6B,CAA7B,CAAhB;AACA,UAAIC,OAAJ,CAJuD,CAMvD;;AACAC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,sBAAvB,EAA+CC,MAA/C,GAAwD,IAAxD;AACAF,MAAAA,QAAQ,CAACC,aAAT,CAAuB,wBAAvB,EAAiDC,MAAjD,GAA0D,IAA1D;;AACA,UAAIT,IAAI,CAACG,MAAL,CAAYO,SAAZ,CAAsBC,QAAtB,CAA+B,eAA/B,CAAJ,EAAqD;AACnD;AACAL,QAAAA,OAAO,GAAG,CAAC;AACTM,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WADJ;AAC0CC,UAAAA,KAAK,EAAEC,SAAS,CAACjB,IAAV,CAAe,IAAf;AADjD,SAAD,EAEP;AACDa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADZ;AAC+DF,UAAAA,KAAK,EAAEG,WAAW,CAACnB,IAAZ,CAAiB,IAAjB;AADtE,SAFO,EAKV;AACEa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADf;AACkEF,UAAAA,KAAK,EAAE1B,WAAW,CAACU,IAAZ,CAAiB,IAAjB;AADzE,SALU,CAAV;AAQD,OAVD,MAUO;AACL;AACAO,QAAAA,OAAO,GAAG,CAAC;AACTM,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,MAAX;AAAmBC,YAAAA,SAAS,EAAE;AAA9B,WADJ;AAC0CC,UAAAA,KAAK,EAAEI,QAAQ,CAACpB,IAAT,CAAc,IAAd;AADjD,SAAD,EAEP;AACDa,UAAAA,WAAW,EAAE;AAAEC,YAAAA,OAAO,EAAE,QAAX;AAAqBI,YAAAA,QAAQ,EAAE;AAA/B,WADZ;AAC+DF,UAAAA,KAAK,EAAE1B,WAAW,CAACU,IAAZ,CAAiB,IAAjB;AADtE,SAFO,CAAV;AAKD;;AAEDK,MAAAA,SAAS,CAACE,OAAV,GAAoBA,OAApB;AACAF,MAAAA,SAAS,CAACgB,QAAV;AACD;AACF,GAjCD;;AAmCC,QAAMF,WAAW,GAAIG,CAAD,IAAM;AACzB,QAAIC,GAAG,GAAG9E,eAAV;AACA,UAAM+B,SAAS,GAAG/B,eAAe,CAAC+E,eAAhB,CAAgClE,KAAlD;AACAoC,IAAAA,mBAAmB,CAAClB,SAAD,EAAY/B,eAAZ,CAAnB;AACA6C,IAAAA,WAAW;AACZ,GALA;;AAOD,QAAM8B,QAAQ,GAAIE,CAAD,IAAO;AACtB,QAAIC,GAAG,GAAG9E,eAAV;AACA,UAAM+B,SAAS,GAAG/B,eAAe,CAACgF,WAAhB,CAA4BC,qBAA5B,CAAkD,mBAAlD,CAAlB;AACAlD,IAAAA,SAAS,CAACJ,cAAV,GAA2BoC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CH,aAA9C,CAA4D,CAA5D,EAA+DqB,KAA1F;AACAlD,IAAAA,gBAAgB,CAACD,SAAD,EAAY/B,eAAZ,CAAhB;AACA6C,IAAAA,WAAW;AACZ,GAND;;AAQA,QAAM2B,SAAS,GAAIK,CAAD,IAAM;AACtB,UAAM9C,SAAS,GAAG/B,eAAe,CAACgF,WAAhB,CAA4BC,qBAA5B,CAAkD,mBAAlD,CAAlB;AACAlD,IAAAA,SAAS,CAACJ,cAAV,GAA2BoC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CH,aAA9C,CAA4D,CAA5D,EAA+DqB,KAA1F;AACApC,IAAAA,mBAAmB,CAACf,SAAD,EAAY/B,eAAZ,CAAnB;AACA6C,IAAAA,WAAW;AACZ,GALD;;AAMA,QAAMA,WAAW,GAAG,MAAK;AACvB,QAAIe,SAAS,GAAIG,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CAAD,CAA+CH,aAA/C,CAA6D,CAA7D,CAAhB;AACAD,IAAAA,SAAS,CAACuB,IAAV,GAFuB,CAGvB;AACD,GAJD;;AAMAjF,EAAAA,WAAW;AACX,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMiD,sBAAsB,EAA5B,CAFF,CADF;AAMD;;AAED,eAAe1D,GAAf","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const[events, setEvents] = useState([]);\n  const[calDataSource, setCalDataSource] = useState([]);\n  //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events'\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\")\n    .then(response => response.json())\n    .then(res => {\n      //alert(\"Results from server: \" + JSON.stringify(res.events));\n      if(res && res.data){\n        var events = generateEventsSource(res.data);\n        //setEvents(res.data);\n        setEvents(events);\n      }\n    });\n  }\n\n  const generateEventsSource = (eventsColl) => {\n    var events = [];\n    /* {\n      \"id\":\"e10ee28091a211eabad601fff75a3b91\",\n      \"subject\":\"dp2\",\n      \"description\":\"dp2-desc\",\n      \"location\":\"sf2\",\n      \"start\":\"Tue May 05 2020 08:00:00 GMT-0700 (Pacific Daylight Time)\",\n      \"end\":\"Tue May 05 2020 08:30:00 GMT-0700 (Pacific Daylight Time)\",\n      \"isRecurring\":null,\n      \"repeatPatter\":null,\n      \"repeatCount\":null\n   } */\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.id = element.id);\n      element.EndTime && (event.end = (new Date(element.EndTime)).toString())\n      element.StartTime && (event.start = (new Date(element.StartTime)).toString())\n      element.Subject && (event.subject = element.Subject)\n      element.Location && (event.location = element.Location)\n      element.Description && (event.description = element.Description)\n      element.RecurrenceRule && (event.isRecurring = true)\n      element.RecurrenceRule && (event.repeatPattern = element.RecurrenceRule)\n      return event;\n    });\n  }\n\n  const getEventObject = (eventData) => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = (new Date(eventData.EndTime)).toString())\n    eventData.StartTime && (event.start = (new Date(eventData.StartTime)).toString())\n    eventData.Subject && (event.subject = eventData.Subject)\n    eventData.Location && (event.location = eventData.Location)\n    eventData.Description && (event.description = eventData.Description)\n    eventData.RecurrenceRule && (event.isRecurring = true)\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule)\n    return event;\n  }\n\n  //const addEventToServer = (eventData, scheduleObj) => {\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData);\n    //eventObj.id = currentSchedule.eventBase.getEventMaxID() + 1;\n    //var recPattern = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    /* if(recPattern) {\n      eventObj.repeatPatter = recPattern\n    } */\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: eventBody\n    })\n    .then((res) => {\n      currentSchedule.addEvent(eventData);\n      //alert(\"added event to server\");\n    })\n    .catch((err) => {\n      //alert(\"Error while adding event to server\");\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  }\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    /* var recPattern = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    if(recPattern) {\n      eventObj.repeatPatter = recPattern\n    } */\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id='+id, {\n      method: 'PUT',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n      body: eventBody\n    })\n    .then((err, data) => {\n      currentSchedule.saveEvent(eventData);\n      //alert(\"Updated event to server\");\n    })\n    .catch((err) => {\n      //alert(\"Error while Updating event to server\");\n    });\n  }\n\n  //const deleteEventInServer = (eventData, scheduleObj) => {\n  const deleteEventInServer = (eventData) => {\n    var id = eventData.id;\n    fetch(domain + '/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(() => {\n      currentSchedule.deleteEvent(eventData);\n      //alert(\"Deleted event in server\");\n    })\n    .catch((err) => {\n      //alert(\"Error while Deleting event to server\")\n    });\n  }\n\n  const addSyncfusionScheduler = () => {\n    return (<div>\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: events}} \n      showQuickInfo={false} \n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n  }\n\n  const openPopUp = (args) => {\n    //alert(\"test\");\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo'? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n\n      //hide timezone and all day fields for now.\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n      if (args.target.classList.contains('e-appointment')) {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      \n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n   const eventDelete = (e)=> {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const eventAdd = (e) => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const editEvent = (e)=> {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n    //alert(\" Event clsoed\");\n  }\n\n  fetchEvents();\n  return (\n    <div className=\"App\">\n      {/* <div>{renderEntries()}</div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}