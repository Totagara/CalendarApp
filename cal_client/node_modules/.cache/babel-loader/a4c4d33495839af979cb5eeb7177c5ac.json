{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { CalendarAdminBar } from './UserManagement';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const items = [];\n  items.push({\n    id: 1,\n    value: 'one'\n  });\n  items.push({\n    id: 2,\n    value: 'two'\n  });\n  items.push({\n    id: 3,\n    value: 'three'\n  });\n  items.push({\n    id: 4,\n    value: 'four'\n  });\n  items.push({\n    id: 5,\n    value: 'five'\n  });\n  items.push({\n    id: 6,\n    value: 'six'\n  });\n  useEffect(() => {\n    fetchEvents();\n    console.log(\"fetched\");\n  }, [currentUser]); //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events';\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events?id=\" + currentUser).then(response => response.json()).then(resp => {\n      if (resp && resp.data) {\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    });\n  };\n\n  const testShowPopup = () => {\n    alert('test');\n  };\n\n  const generateEventsSource = eventsColl => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = new Date(element.end).toString());\n      element.start && (event.StartTime = new Date(element.start).toString());\n      element.subject && (event.Subject = element.subject);\n      element.location && (event.Location = element.location);\n      element.description && (event.Description = element.description);\n      element.isRecurring && (event.Repeat = true);\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern);\n      events.push(event);\n    });\n    return events;\n  };\n\n  const getEventObject = eventData => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = new Date(eventData.EndTime).toString());\n    eventData.StartTime && (event.start = new Date(eventData.StartTime).toString());\n    eventData.Subject && (event.subject = eventData.Subject);\n    eventData.Location && (event.location = eventData.Location);\n    eventData.Description && (event.description = eventData.Description);\n    eventData.RecurrenceRule && (event.isRecurring = true);\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule);\n    return event;\n  };\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData);\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then(res => {\n      currentSchedule.addEvent(eventData);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  };\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id=' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then((err, data) => {\n      currentSchedule.saveEvent(eventData);\n    }).catch(err => {});\n  };\n\n  const deleteEventInServer = eventData => {\n    var id = eventData.id;\n    fetch(domain + '/id=' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      currentSchedule.deleteEvent(eventData);\n    }).catch(err => {});\n  };\n\n  const addSyncfusionScheduler = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: events\n      },\n      showQuickInfo: false,\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo' ? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons; //hide timezone and all day fields for now.\n\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventDelete = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const eventAdd = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const editEvent = e => {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide();\n  }; //fetchEvents();\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CalendarAdminBar, {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    userList: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js"],"names":["React","useState","useEffect","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","Resize","DragAndDrop","CalendarAdminBar","App","events","setEvents","currentUser","setCurrentUser","items","push","id","value","fetchEvents","console","log","scheduleObj","currentEvent","currentSchedule","domain","fetch","then","response","json","resp","data","generateEventsSource","testShowPopup","alert","eventsColl","forEach","element","event","Id","end","EndTime","Date","toString","start","StartTime","subject","Subject","location","Location","description","Description","isRecurring","Repeat","repeatPattern","RecurrenceRule","getEventObject","eventData","addEventToServer","eventObj","eventBody","JSON","stringify","method","headers","body","res","addEvent","catch","err","dialogClose","updateEventToServer","saveEvent","deleteEventInServer","deleteEvent","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","getEventDetails","target","dialogObj","ej2_instances","buttons","document","querySelector","hidden","classList","contains","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","eventAdd","dataBind","e","tes","activeEventData","eventWindow","getObjectFromFormData","hide"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport {CalendarAdminBar} from './UserManagement';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  const items = [];\n  items.push({id:1, value: 'one'});\n  items.push({id:2, value: 'two'});\n  items.push({id:3, value: 'three'});\n  items.push({id:4, value: 'four'});\n  items.push({id:5, value: 'five'});\n  items.push({id:6, value: 'six'});\n\n  useEffect(() => {\n    fetchEvents();\n    console.log(\"fetched\");\n  }, [currentUser]);\n\n  //const[scheduleObj, setScheduleObj] = useState({});\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events'\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events?id=\"+currentUser)\n    .then(response => response.json())\n    .then(resp => {\n      if(resp && resp.data){\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    });\n  }\n\n  const testShowPopup = () => {\n    alert('test');\n  }\n\n  const generateEventsSource = (eventsColl) => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = (new Date(element.end)).toString())\n      element.start && (event.StartTime = (new Date(element.start)).toString())\n      element.subject && (event.Subject = element.subject)\n      element.location && (event.Location = element.location)\n      element.description && (event.Description = element.description)\n      element.isRecurring && (event.Repeat = true)\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern)\n      events.push(event);\n    });\n    return events;\n  }\n\n  const getEventObject = (eventData) => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = (new Date(eventData.EndTime)).toString())\n    eventData.StartTime && (event.start = (new Date(eventData.StartTime)).toString())\n    eventData.Subject && (event.subject = eventData.Subject)\n    eventData.Location && (event.location = eventData.Location)\n    eventData.Description && (event.description = eventData.Description)\n    eventData.RecurrenceRule && (event.isRecurring = true)\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule)\n    return event;\n  }\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData);\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: eventBody\n    })\n    .then((res) => {\n      currentSchedule.addEvent(eventData);\n    })\n    .catch((err) => {\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  }\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id='+id, {\n      method: 'PUT',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n      body: eventBody\n    })\n    .then((err, data) => {\n      currentSchedule.saveEvent(eventData);\n    })\n    .catch((err) => {\n    });\n  }\n\n  const deleteEventInServer = (eventData) => {\n    var id = eventData.id;\n    fetch(domain + '/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(() => {\n      currentSchedule.deleteEvent(eventData);\n    })\n    .catch((err) => {\n    });\n  }\n\n  const addSyncfusionScheduler = () => {\n    return (<div>\n      <ScheduleComponent currentView='Week' \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: events}} \n      showQuickInfo={false} \n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n  }\n\n  const openPopUp = (args) => {\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo'? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n\n      //hide timezone and all day fields for now.\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      \n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n   const eventDelete = (e)=> {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const eventAdd = (e) => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const editEvent = (e)=> {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n  }\n\n  //fetchEvents();\n  return (\n    <>\n      {/* adwa version */}\n      {/* <CalendarAdminBar currentUser={currentUser} setCurrentUser={setCurrentUser} /> */}\n      <CalendarAdminBar currentUser={currentUser} setCurrentUser={setCurrentUser} userList={items} />\n      {/* <div className=\"App\">\n        <UserDropDown/>\n        <AddUser/>\n        <AddWorkHours/>\n      </div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}