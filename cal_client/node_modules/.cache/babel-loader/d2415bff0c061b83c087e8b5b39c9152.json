{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n/* export const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  userListItems,\n}) => {\n  const [userList, setUserList] = useState([]);\n  return (\n    <>\n      <UserDropDown\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        userList={userListItems}\n      />\n      <AddUser userList={userList} setUserList={setUserList} />\n      <AddWorkHours />\n    </>\n  );\n}; */\n\nexport const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  usersList,\n  setUsersList\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserDropDown, {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    usersList: usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddUser, {\n    usersList: usersList,\n    setUsersList: setUsersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddWorkHours, {\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst UserDropDown = ({\n  currentUser,\n  setCurrentUser,\n  usersList\n}) => {\n  //const [user, setUsers] = useState([]);\n  //const [selectedValue, setSelectedValue] = useState(\"\");\n  const classes = useStyles();\n  /* const handleSelectionChange = (e) => {\n    setCurrentUser(e.target.value);\n    if(usersList.length){\n      var index = usersList.findIndex((user) => user.id == e.target.value);\n      if(index >= 0){\n        setSelectedValue(usersList[index]);\n      }\n    }\n  } */\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Current User\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    defaultValue: \"\",\n    id: \"grouped-native-select\" // value = {selectedValue}\n    //onChange={handleSelectionChange}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, usersList.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 38\n    }\n  }, user.name)))));\n};\n\nconst AddUser = ({\n  usersList,\n  setUsersList\n}) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = userObj => {\n    var userBody = JSON.stringify(userObj);\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: userBody\n    }).then(res => {\n      userObj.id = res.status;\n      setUsersList([...usersList, userObj]);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n  };\n\n  const closeDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    name.current.value = '';\n    email.current.value = '';\n    phone.current.value = '';\n    location.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n      addUserPopUp.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, \"Add user\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addUserDialog\",\n    class: \"modal addUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"User Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    key: \"name\",\n    label: \"Name\",\n    inputRef: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"email\",\n    label: \"Email\",\n    inputRef: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"phone\",\n    label: \"Phone\",\n    inputRef: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"location\",\n    label: \"Location\",\n    inputRef: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      closeDialog(\"addUser\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      var userObj = {};\n      userObj.name = name.current.value;\n      userObj.email = email.current.value;\n      userObj.phone = phone.current.value;\n      userObj.location = location.current.value;\n      addNewUser(userObj);\n      closeDialog(\"addUser\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};\n\nconst AddWorkHours = ({\n  currentUser\n}) => {\n  const classes = useStyles(); //const [startTime, setStartTime] = React.useState(new Date().getHours());\n  //const [endTime, setEndTime] = React.useState(new Date().getHours()+1);\n  //check box states\n\n  const [state, setState] = React.useState({\n    checkedSun: false,\n    checkedMon: true,\n    checkedTue: true,\n    checkedWed: true,\n    checkedThu: true,\n    checkedFri: true,\n    checkedSat: false\n  });\n\n  const handleCheckBoxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  }; //const checkedSunRef = useRef(\"\");\n\n\n  const checkedSunRef = useRef(state.checkedSun); //const checkedMonRef = useRef(\"\");\n\n  const checkedMonRef = useRef(state.checkedMon);\n  const checkedTueRef = useRef(state.checkedTue);\n  const checkedWedRef = useRef(state.checkedWed);\n  const checkedThuRef = useRef(state.checkedThu);\n  const checkedFriRef = useRef(state.checkedFri);\n  const checkedSatRef = useRef(state.checkedSat);\n  const startTimeTextField = useRef(\"\");\n  const endTimeTextField = useRef(\"\");\n  const blockerNote = useRef(\"\");\n\n  const closeWorkHoursDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\"; //startTimeTextField.current.value = '';\n    //endTimeTextField.current.value = '';\n\n    blockerNote.current.value = '';\n  };\n\n  const updateWorkHours = workHoursObj => {\n    //var eventObj = getEventObject(eventData);\n    var workHoursBody = JSON.stringify(workHoursObj);\n    fetch('http://localhost:3000/users/workhours/' + currentUser, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: workHoursBody\n    }).then(res => {\n      console.log(\"User work hours updated.\");\n    }).catch(err => {\n      console.log(\"Error during User work hours updatation. Err: \" + err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n      addWorkHoursPopup.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, \"Add Work hours\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addWorkHoursDialog\",\n    class: \"modal addWorkHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, \"User Work hours Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: startTimeTextField,\n    id: \"startTime\",\n    label: \"Start time\",\n    type: \"time\",\n    defaultValue: \"08:00\" //value = {startTime}\n    ,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: endTimeTextField,\n    id: \"endTime\",\n    label: \"End time\",\n    type: \"time\",\n    defaultValue: \"05:00\" //value = {endTime}\n    ,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    key: \"blockerNote\",\n    label: \"Blocker note\",\n    inputRef: blockerNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSunRef,\n      checked: state.checkedSun,\n      onChange: handleCheckBoxChange,\n      name: \"checkedSun\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }\n    }),\n    label: \"Sunday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedMon,\n      onChange: handleCheckBoxChange,\n      inputRef: checkedMonRef,\n      name: \"checkedMon\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }),\n    label: \"Monday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedTueRef,\n      name: \"checkedTue\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }),\n    label: \"Tuesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedWedRef,\n      name: \"checkedWed\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }),\n    label: \"Wednesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedThuRef,\n      name: \"checkedThu\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 21\n      }\n    }),\n    label: \"Thursday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedFriRef,\n      name: \"checkedFri\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }),\n    label: \"Friday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSatRef,\n      name: \"checkedSat\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }\n    }),\n    label: \"Saturday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n      modalPopUp.style.display = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      var workHoursObj = {};\n      var days = [];\n      checkedSunRef.current.checked && days.push(\"SU\");\n      checkedMonRef.current.checked && days.push(\"MO\");\n      checkedTueRef.current.checked && days.push(\"TU\");\n      checkedWedRef.current.checked && days.push(\"WE\");\n      checkedThuRef.current.checked && days.push(\"TH\");\n      checkedFriRef.current.checked && days.push(\"FR\");\n      checkedSatRef.current.checked && days.push(\"SA\");\n      var curDate = new Date();\n      workHoursObj.start = startTimeTextField.current.value;\n      workHoursObj.end = endTimeTextField.current.value;\n      var freqPattern = \"FREQ=WEEKLY;\";\n\n      if (days.length == 0 || !workHoursObj.start || !workHoursObj.end) {\n        alert(\"Valid work hours days and time is required.\");\n      } else {\n        var daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n        var intervalPattern = \"INTERVAL=1;\";\n        workHoursObj.pattern = freqPattern + daysPattern + intervalPattern;\n        workHoursObj.blockerNote = blockerNote.current.value;\n        updateWorkHours(workHoursObj);\n        closeWorkHoursDialog(\"addWorkHours\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js"],"names":["React","useState","useRef","Button","Select","makeStyles","InputLabel","FormControl","TextField","FormControlLabel","Checkbox","useStyles","theme","formControl","margin","spacing","minWidth","CalendarAdminBar","currentUser","setCurrentUser","usersList","setUsersList","UserDropDown","classes","map","user","id","name","AddUser","email","phone","location","addNewUser","userObj","userBody","JSON","stringify","fetch","method","headers","body","then","res","status","catch","err","console","log","closeDialog","className","popUp","document","getElementsByClassName","style","display","current","value","justifyContent","addUserPopUp","e","preventDefault","AddWorkHours","state","setState","checkedSun","checkedMon","checkedTue","checkedWed","checkedThu","checkedFri","checkedSat","handleCheckBoxChange","event","target","checked","checkedSunRef","checkedMonRef","checkedTueRef","checkedWedRef","checkedThuRef","checkedFriRef","checkedSatRef","startTimeTextField","endTimeTextField","blockerNote","closeWorkHoursDialog","updateWorkHours","workHoursObj","workHoursBody","addWorkHoursPopup","textField","shrink","step","modalPopUp","days","push","curDate","Date","start","end","freqPattern","length","alert","daysPattern","join","intervalPattern","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n/* export const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  userListItems,\n}) => {\n  const [userList, setUserList] = useState([]);\n  return (\n    <>\n      <UserDropDown\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        userList={userListItems}\n      />\n      <AddUser userList={userList} setUserList={setUserList} />\n      <AddWorkHours />\n    </>\n  );\n}; */\n\nexport const CalendarAdminBar = ({ currentUser, setCurrentUser, usersList, setUsersList}) => {\n    return (\n      <>\n        <UserDropDown\n          currentUser={currentUser}\n          setCurrentUser={setCurrentUser}\n          usersList={usersList}\n        />\n        <AddUser usersList={usersList} setUsersList={setUsersList} />\n        <AddWorkHours currentUser={currentUser}/>\n      </>\n    );\n  };\n\nconst UserDropDown = ({ currentUser, setCurrentUser, usersList}) => {\n  //const [user, setUsers] = useState([]);\n\n  //const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const classes = useStyles();\n\n  /* const handleSelectionChange = (e) => {\n    setCurrentUser(e.target.value);\n    if(usersList.length){\n      var index = usersList.findIndex((user) => user.id == e.target.value);\n      if(index >= 0){\n        setSelectedValue(usersList[index]);\n      }\n    }\n  } */\n\n  return (\n    <div className=\"App\">\n        <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\"\n        // value = {selectedValue}\n        //onChange={handleSelectionChange}\n        >\n            {usersList.map((user) => <option key={user.id} value={user.id}>{user.name}</option>)}\n        </Select>\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\">\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"Category 1\">\n            <option value={1}>Option 1</option>\n            <option value={2}>Option 2</option>\n          </optgroup>\n          <optgroup label=\"Category 2\">\n            <option value={3}>Option 3</option>\n            <option value={4}>Option 4</option>\n          </optgroup>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nconst AddUser = ({usersList, setUsersList}) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = (userObj) => {\n      var userBody = JSON.stringify(userObj);\n      fetch('http://localhost:3000/users', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: userBody\n      })\n      .then((res) => {\n        userObj.id = res.status;\n        setUsersList([...usersList, userObj]);\n      })\n      .catch((err) => {\n        console.log(\"Err: \" + err);\n      });\n  }\n\n  const closeDialog = (className) => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    name.current.value = '';\n    email.current.value = '';\n    phone.current.value = '';\n    location.current.value = '';\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n            addUserPopUp.style.display = \"block\";\n          }}\n        >\n          Add user\n        </Button>\n      </FormControl>\n\n      {/* <div id=\"myModal\" class=\"modal\"> */}\n      <div id=\"addUserDialog\" class=\"modal addUser\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Details:\n            </InputLabel>\n            <FormControl className={classes.formControl}>\n              <TextField  key=\"name\" label=\"Name\" inputRef={name} />\n              <TextField  key=\"email\" label=\"Email\" inputRef={email}/>\n              <TextField  key=\"phone\" label=\"Phone\" inputRef={phone}/>\n              <TextField  key=\"location\" label=\"Location\" inputRef={location}/>\n            </FormControl>\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {closeDialog(\"addUser\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              var userObj = {};\n              userObj.name = name.current.value;\n              userObj.email = email.current.value;\n              userObj.phone = phone.current.value;\n              userObj.location = location.current.value;\n              addNewUser(userObj);\n              closeDialog(\"addUser\");\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddWorkHours = ({currentUser}) => {\n    const classes = useStyles();\n    //const [startTime, setStartTime] = React.useState(new Date().getHours());\n    //const [endTime, setEndTime] = React.useState(new Date().getHours()+1);\n\n    //check box states\n    const [state, setState] = React.useState({\n      checkedSun: false,\n      checkedMon: true,\n      checkedTue: true,\n      checkedWed: true,\n      checkedThu: true,\n      checkedFri: true,\n      checkedSat: false,\n    });\n\n    const handleCheckBoxChange = (event) => {\n      setState({ ...state, [event.target.name]: event.target.checked });\n    };\n\n    //const checkedSunRef = useRef(\"\");\n    const checkedSunRef = useRef(state.checkedSun);\n    //const checkedMonRef = useRef(\"\");\n    const checkedMonRef = useRef(state.checkedMon);\n    const checkedTueRef = useRef(state.checkedTue);\n    const checkedWedRef = useRef(state.checkedWed);\n    const checkedThuRef = useRef(state.checkedThu);\n    const checkedFriRef = useRef(state.checkedFri);\n    const checkedSatRef = useRef(state.checkedSat);\n    const startTimeTextField = useRef(\"\");\n    const endTimeTextField = useRef(\"\");\n    const blockerNote = useRef(\"\");\n\n    const closeWorkHoursDialog = (className) => {\n      var popUp = document.getElementsByClassName(className)[0];\n      popUp.style.display = \"none\";\n      //startTimeTextField.current.value = '';\n      //endTimeTextField.current.value = '';\n      blockerNote.current.value = '';\n    }\n\n    const updateWorkHours = (workHoursObj) => {\n      //var eventObj = getEventObject(eventData);\n        var workHoursBody = JSON.stringify(workHoursObj);\n        fetch('http://localhost:3000/users/workhours/'+currentUser, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: workHoursBody\n        })\n        .then((res) => {\n          console.log(\"User work hours updated.\");\n        })\n        .catch((err) => {\n          console.log(\"Error during User work hours updatation. Err: \" + err);\n        });\n    }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n            addWorkHoursPopup.style.display = \"block\";\n          }}\n        >\n          Add Work hours\n        </Button>\n      </FormControl>\n      <div id=\"addWorkHoursDialog\" class=\"modal addWorkHours\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Work hours Details:\n            </InputLabel>\n            <FormControl className={classes.formControl}>\n                <FormControl className={classes.formControl}>\n                <form class=\"clock-textField clock-container\" noValidate>\n                      <TextField\n                          inputRef={startTimeTextField}\n                          id=\"startTime\"\n                          label=\"Start time\"\n                          type=\"time\"\n                          defaultValue=\"08:00\"\n                          //value = {startTime}\n                          className={classes.textField}\n                          InputLabelProps={{\n                          shrink: true,\n                          }}\n                          inputProps={{\n                          step: 300, // 5 min\n                          }}\n                      />\n                  </form>\n                <form class=\"clock-textField clock-container\" noValidate>\n                    <TextField\n                        inputRef={endTimeTextField}\n                        id=\"endTime\"\n                        label=\"End time\"\n                        type=\"time\"\n                        defaultValue=\"05:00\"\n                        //value = {endTime}\n                        className={classes.textField}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n                  </form>\n                <TextField  key=\"blockerNote\" label=\"Blocker note\" inputRef={blockerNote} />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSunRef}\n                      checked={state.checkedSun}\n                      onChange={handleCheckBoxChange}\n                      name=\"checkedSun\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Sunday\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.checkedMon}\n                      onChange={handleCheckBoxChange}\n                      inputRef={checkedMonRef}\n                      name=\"checkedMon\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Monday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedTueRef}\n                      name=\"checkedTue\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Tuesday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedWedRef}\n                      name=\"checkedWed\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Wednesday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedThuRef}\n                      name=\"checkedThu\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Thursday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedFriRef}\n                      name=\"checkedFri\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Friday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSatRef}\n                      name=\"checkedSat\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Saturday\"\n                />\n                </FormControl>  \n            </FormControl>\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n              modalPopUp.style.display = \"none\";\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              var workHoursObj = {};\n              var days = [];\n              (checkedSunRef.current.checked) && (days.push(\"SU\"));\n              (checkedMonRef.current.checked) && (days.push(\"MO\"));\n              (checkedTueRef.current.checked) && (days.push(\"TU\"));\n              (checkedWedRef.current.checked) && (days.push(\"WE\"));\n              (checkedThuRef.current.checked) && (days.push(\"TH\"));\n              (checkedFriRef.current.checked) && (days.push(\"FR\"));\n              (checkedSatRef.current.checked) && (days.push(\"SA\"));\n              var curDate = new Date();\n              workHoursObj.start = startTimeTextField.current.value;\n              workHoursObj.end = endTimeTextField.current.value;\n              var freqPattern = \"FREQ=WEEKLY;\";\n              if(days.length == 0 || !workHoursObj.start || !workHoursObj.end){\n                alert(\"Valid work hours days and time is required.\");\n              } else {\n                var daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n                var intervalPattern = \"INTERVAL=1;\"; \n                workHoursObj.pattern = freqPattern + daysPattern + intervalPattern;\n                workHoursObj.blockerNote = blockerNote.current.value;\n                updateWorkHours(workHoursObj);\n                closeWorkHoursDialog(\"addWorkHours\");\n              }\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}