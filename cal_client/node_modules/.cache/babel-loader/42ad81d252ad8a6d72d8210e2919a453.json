{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [calDataSource, setCalDataSource] = useState([]); //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events';\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\").then(response => response.json()).then(resp => {\n      if (resp && resp.data) {\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    });\n  };\n\n  const testShowPopup = () => {\n    alert('test');\n  };\n\n  const generateEventsSource = eventsColl => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = new Date(element.end).toString());\n      element.start && (event.StartTime = new Date(element.start).toString());\n      element.subject && (event.Subject = element.subject);\n      element.location && (event.Location = element.location);\n      element.description && (event.Description = element.description);\n      element.isRecurring && (event.Repeat = true);\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern);\n      events.push(event);\n    });\n    return events;\n  };\n\n  const getEventObject = eventData => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = new Date(eventData.EndTime).toString());\n    eventData.StartTime && (event.start = new Date(eventData.StartTime).toString());\n    eventData.Subject && (event.subject = eventData.Subject);\n    eventData.Location && (event.location = eventData.Location);\n    eventData.Description && (event.description = eventData.Description);\n    eventData.RecurrenceRule && (event.isRecurring = true);\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule);\n    return event;\n  };\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData);\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then(res => {\n      currentSchedule.addEvent(eventData);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  };\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id=' + id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then((err, data) => {\n      currentSchedule.saveEvent(eventData);\n    }).catch(err => {});\n  };\n\n  const deleteEventInServer = eventData => {\n    var id = eventData.id;\n    fetch(domain + '/id=' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      currentSchedule.deleteEvent(eventData);\n    }).catch(err => {});\n  };\n\n  const addSyncfusionScheduler = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: \"margin-top: 20px;\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"add\",\n      title: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"edit\",\n      title: \"Edit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, \"Edit\"), /*#__PURE__*/React.createElement(ButtonComponent, {\n      id: \"delete\",\n      title: \"Delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: events\n      },\n      showQuickInfo: false,\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo' ? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons; //hide timezone and all day fields for now.\n\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventDelete = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const eventAdd = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const editEvent = e => {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide();\n  };\n\n  fetchEvents();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js"],"names":["React","useState","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","Resize","DragAndDrop","ButtonComponent","App","events","setEvents","calDataSource","setCalDataSource","scheduleObj","currentEvent","currentSchedule","domain","fetchEvents","fetch","then","response","json","resp","data","generateEventsSource","testShowPopup","alert","eventsColl","forEach","element","event","id","Id","end","EndTime","Date","toString","start","StartTime","subject","Subject","location","Location","description","Description","isRecurring","Repeat","repeatPattern","RecurrenceRule","push","getEventObject","eventData","addEventToServer","eventObj","eventBody","JSON","stringify","method","headers","body","res","addEvent","catch","err","console","log","dialogClose","updateEventToServer","saveEvent","deleteEventInServer","deleteEvent","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","getEventDetails","target","dialogObj","ej2_instances","buttons","document","querySelector","hidden","classList","contains","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","eventAdd","dataBind","e","tes","activeEventData","eventWindow","getObjectFromFormData","value","hide"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda, Resize, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\n\nfunction App() {\n  const[events, setEvents] = useState([]);\n  const[calDataSource, setCalDataSource] = useState([]);\n  //const[scheduleObj, setScheduleObj] = useState({});\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000/calendar/events'\n\n  const fetchEvents = () => {\n    fetch(\"http://localhost:3000/calendar/events\")\n    .then(response => response.json())\n    .then(resp => {\n      if(resp && resp.data){\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    });\n  }\n\n  const testShowPopup = () => {\n    alert('test');\n  }\n\n  const generateEventsSource = (eventsColl) => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = (new Date(element.end)).toString())\n      element.start && (event.StartTime = (new Date(element.start)).toString())\n      element.subject && (event.Subject = element.subject)\n      element.location && (event.Location = element.location)\n      element.description && (event.Description = element.description)\n      element.isRecurring && (event.Repeat = true)\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern)\n      events.push(event);\n    });\n    return events;\n  }\n\n  const getEventObject = (eventData) => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = (new Date(eventData.EndTime)).toString())\n    eventData.StartTime && (event.start = (new Date(eventData.StartTime)).toString())\n    eventData.Subject && (event.subject = eventData.Subject)\n    eventData.Location && (event.location = eventData.Location)\n    eventData.Description && (event.description = eventData.Description)\n    eventData.RecurrenceRule && (event.isRecurring = true)\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule)\n    return event;\n  }\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    var eventObj = getEventObject(eventData);\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: eventBody\n    })\n    .then((res) => {\n      currentSchedule.addEvent(eventData);\n    })\n    .catch((err) => {\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  }\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/?id='+id, {\n      method: 'PUT',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n      body: eventBody\n    })\n    .then((err, data) => {\n      currentSchedule.saveEvent(eventData);\n    })\n    .catch((err) => {\n    });\n  }\n\n  const deleteEventInServer = (eventData) => {\n    var id = eventData.id;\n    fetch(domain + '/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then(() => {\n      currentSchedule.deleteEvent(eventData);\n    })\n    .catch((err) => {\n    });\n  }\n\n  const addSyncfusionScheduler = () => {\n    return (<div style=\"margin-top: 20px;\">\n      <ButtonComponent id='add' title='Add'>Add</ButtonComponent>\n      <ButtonComponent id='edit' title='Edit'>Edit</ButtonComponent>\n      <ButtonComponent id='delete' title='Delete' >Delete</ButtonComponent>\n      <ScheduleComponent currentView='Week' \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: events}} \n      showQuickInfo={false} \n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n  }\n\n  const openPopUp = (args) => {\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo'? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n\n      //hide timezone and all day fields for now.\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      \n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n   const eventDelete = (e)=> {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const eventAdd = (e) => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const editEvent = (e)=> {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n  }\n\n  fetchEvents();\n  return (\n    <div className=\"App\">\n      <div>{addSyncfusionScheduler()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}