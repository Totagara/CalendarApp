{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda } from '@syncfusion/ej2-react-schedule';\nimport { CalendarAdminBar } from './UserManagement';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n  const [usersList, setUsersList] = useState([]);\n  useEffect(() => {\n    var fetchPromise = fetchCurUser(currentUser);\n    fetchPromise.then(curUser => {\n      setCurrentUser(curUser);\n      fetchEvents(curUser);\n    });\n    /* if(currentUser != \"\"){\n      fetchEvents();\n    } else {\n      fetchUsers();\n    } */\n    //setUsersList([...items]);\n\n    console.log(\"fetched\");\n  }, [currentUser]);\n\n  const fetchCurUser = curUser => {\n    return new Promise((resolve, reject) => {\n      if (curUser) {\n        resolve(currentUser);\n      } else {\n        var usersPromise = fetchUsers();\n        usersPromise.then(firstUser => {\n          resolve(firstUser);\n        }).catch(err => {\n          console.log(err);\n          reject(null);\n        });\n      }\n    });\n  }; //const[scheduleObj, setScheduleObj] = useState({});\n\n\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000';\n\n  const fetchEvents = curUser => {\n    //fetch(\"http://localhost:3000/calendar/events?facultyId=\"+currentUser)\n    fetch(domain + \"/calendar/events?facultyId=\" + curUser).then(response => response.json()).then(resp => {\n      if (resp && resp.data) {\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    }).catch(err => {\n      console.log(err);\n      setEvents([]);\n    });\n  };\n\n  const fetchUsers = () => {\n    return new Promise((resolve, reject) => {\n      fetch(domain + \"/users\").then(response => response.json()).then(resp => {\n        if (resp && resp.data) {\n          setUsersList(resp.data);\n          resolve(resp.data[0].id);\n        } else {\n          reject(\"No users data available\");\n        }\n      });\n    });\n  };\n  /* const fetchUsers = ()=> {\n    //fetch(\"http://localhost:3000/users\")\n    fetch(domain + \"/users\")\n    .then(response => response.json())\n    .then(resp => {\n      if(resp && resp.data){\n        //var usersList = setUsersList(resp.data);\n        setUsersList(resp.data);\n        //setEvents(events);\n      }\n    });\n  } */\n\n\n  const generateEventsSource = eventsColl => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = new Date(element.end).toString());\n      element.start && (event.StartTime = new Date(element.start).toString());\n      element.subject && (event.Subject = element.subject);\n      element.location && (event.Location = element.location);\n      element.description && (event.Description = element.description);\n      element.isRecurring && (event.Repeat = true);\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern);\n      events.push(event);\n    });\n    return events;\n  };\n\n  const getEventObject = eventData => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = new Date(eventData.EndTime).toString());\n    eventData.StartTime && (event.start = new Date(eventData.StartTime).toString());\n    eventData.Subject && (event.subject = eventData.Subject);\n    eventData.Location && (event.location = eventData.Location);\n    eventData.Description && (event.description = eventData.Description);\n    eventData.RecurrenceRule && (event.isRecurring = true);\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule);\n    return event;\n  };\n\n  const validateDates = (startDate, endDate) => {\n    var isValid = false;\n\n    if (new Date(startDate) !== \"Invalid Date\" && !isNaN(new Date(startDate)) && new Date(endDate) !== \"Invalid Date\" && !isNaN(new Date(endDate))) {\n      isValid = true;\n    } else {\n      alert(\"Invalid Date format.\");\n    }\n\n    if (new Date(startDate) > new Date(endDate)) {\n      alert(\"Start date should not be greater than end date.\");\n      isValid = false;\n    }\n\n    return isValid;\n  };\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    if (validateDates(eventData.StartTime, eventData.EndTime)) {\n      var eventObj = getEventObject(eventData); //use this to get until field value in a proper date format\n      //document.querySelector('.e-until-date').ej2_instances[0].value; \n\n      var eventBody = JSON.stringify(eventObj);\n      fetch(domain + \"/calendar/events?facultyId=\" + currentUser, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: eventBody\n      }).then(res => res.json()).then(resp => {\n        if (resp.status == 403) {\n          alert(\"Faculty not available for the selected date-time.\");\n        } else if (resp.status == 200) {\n          eventData.Id = resp.id;\n          currentSchedule.addEvent(eventData);\n        }\n      }).catch(err => {\n        console.log(\"Err: \" + err);\n      });\n      dialogClose();\n    }\n  };\n\n  const deleteEventInServer = eventData => {\n    var id = eventData.Id;\n    fetch(domain + '/calendar/events/' + id + \"?facultyId=\" + currentUser, {\n      method: 'DELETE'\n    }).then(res => res.json()).then(resp => {\n      if (resp && resp.status == 400) {\n        alert(resp.message);\n      } else if (resp && resp.status == 200) {\n        currentSchedule.deleteEvent(eventData);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  /* const deleteEventInServer = (eventData) => {\n    var id = eventData.Id;\n    fetch(domain + '/events/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then((res) => {\n      currentSchedule.deleteEvent(eventData);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  } */\n\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    eventData.Id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/calendar/events/' + id + \"?facultyId=\" + currentUser, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: eventBody\n    }).then(res => {\n      if (res.status == 403) {\n        alert(\"Faculty not available for the selected date-time.\");\n      } else {\n        currentSchedule.saveEvent(eventData);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const addSyncfusionScheduler = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ScheduleComponent, {\n      currentView: \"Week\",\n      ref: schedule => scheduleObj = schedule,\n      eventSettings: {\n        dataSource: events\n      },\n      showQuickInfo: false,\n      showRecurrenceAlert: false,\n      popupOpen: openPopUp.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewsDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Day\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Week\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ViewDirective, {\n      option: \"Month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Inject, {\n      services: [Day, Week, Month, Agenda],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    })));\n  };\n\n  const openPopUp = args => {\n    if (args.type == 'RecurrenceAlert') {\n      //document.querySelector('.e-quick-alertok').hidden = true;\n      document.getElementsByClassName(\"e-quick-dialog-occurrence-event\").hidden = true; //e-quick-dialog-occurrence-event\n    }\n\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo' ? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = args.element.ej2_instances[0];\n      let buttons; //hide timezone and all day fields for now.\n\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: editEvent.bind(this)\n        }, {\n          buttonModel: {\n            content: 'DELETE',\n            cssClass: 'e-event-delete'\n          },\n          click: eventDelete.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: {\n            content: 'SAVE',\n            isPrimary: true\n          },\n          click: eventAdd.bind(this)\n        }, {\n          buttonModel: {\n            content: 'CANCEL',\n            cssClass: 'e-event-cancel'\n          },\n          click: dialogClose.bind(this)\n        }];\n      }\n\n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  };\n\n  const eventDelete = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const eventAdd = e => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const editEvent = e => {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value;\n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  };\n\n  const dialogClose = () => {\n    let dialogObj = document.querySelector('.e-schedule-dialog').ej2_instances[0];\n    dialogObj.hide();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CalendarAdminBar, {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    usersList: usersList,\n    setUsersList: setUsersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }, addSyncfusionScheduler()));\n} //use this for isBlock feature\n//https://ej2.syncfusion.com/aspnetmvc/documentation/schedule/appointments/?no-cache=1\n\n\nexport default App;","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/App.js"],"names":["React","useState","useEffect","Inject","ScheduleComponent","ViewsDirective","ViewDirective","Day","Week","Month","Agenda","CalendarAdminBar","App","events","setEvents","currentUser","setCurrentUser","usersList","setUsersList","fetchPromise","fetchCurUser","then","curUser","fetchEvents","console","log","Promise","resolve","reject","usersPromise","fetchUsers","firstUser","catch","err","scheduleObj","currentEvent","currentSchedule","domain","fetch","response","json","resp","data","generateEventsSource","id","eventsColl","forEach","element","event","Id","end","EndTime","Date","toString","start","StartTime","subject","Subject","location","Location","description","Description","isRecurring","Repeat","repeatPattern","RecurrenceRule","push","getEventObject","eventData","validateDates","startDate","endDate","isValid","isNaN","alert","addEventToServer","eventObj","eventBody","JSON","stringify","method","headers","body","res","status","addEvent","dialogClose","deleteEventInServer","message","deleteEvent","updateEventToServer","saveEvent","addSyncfusionScheduler","schedule","dataSource","openPopUp","bind","args","type","document","getElementsByClassName","hidden","getEventDetails","target","dialogObj","ej2_instances","buttons","querySelector","classList","contains","buttonModel","content","isPrimary","click","editEvent","cssClass","eventDelete","eventAdd","dataBind","e","tes","activeEventData","eventWindow","getObjectFromFormData","value","hide"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {Inject, ScheduleComponent, ViewsDirective, ViewDirective, Day, Week, Month, Agenda} from '@syncfusion/ej2-react-schedule';\nimport {CalendarAdminBar} from './UserManagement';\n\nfunction App() {\n  const [events, setEvents] = useState([]);\n  const [currentUser, setCurrentUser] = useState(\"\");\n\n  const [usersList, setUsersList] = useState([]);\n\n  useEffect(() => {\n    var fetchPromise = fetchCurUser(currentUser);\n    fetchPromise.then((curUser) => {\n      setCurrentUser(curUser);\n      fetchEvents(curUser);\n    });\n\n    /* if(currentUser != \"\"){\n      fetchEvents();\n    } else {\n      fetchUsers();\n    } */\n    //setUsersList([...items]);\n    console.log(\"fetched\");\n  }, [currentUser]);\n\n  const fetchCurUser = (curUser) => {\n    return new Promise((resolve, reject) => {\n      if(curUser){\n        resolve(currentUser);\n      } else {\n        var usersPromise = fetchUsers();\n        usersPromise.then((firstUser) => {\n          resolve(firstUser);\n        })\n        .catch((err) => {\n          console.log(err);\n          reject(null);\n        });\n      }\n    });\n  }\n\n  //const[scheduleObj, setScheduleObj] = useState({});\n  var scheduleObj, currentEvent, currentSchedule;\n  var domain = 'http://localhost:3000'\n\n  const fetchEvents = (curUser) => {\n    //fetch(\"http://localhost:3000/calendar/events?facultyId=\"+currentUser)\n    fetch(domain + \"/calendar/events?facultyId=\"+curUser)\n    .then(response => response.json())\n    .then(resp => {\n      if(resp && resp.data){\n        var events = generateEventsSource(resp.data);\n        setEvents(events);\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n      setEvents([]);\n    });\n  }\n\n  const fetchUsers = ()=> {\n    return new Promise((resolve, reject) => {\n      fetch(domain + \"/users\")\n      .then(response => response.json())\n      .then(resp => {\n        if(resp && resp.data){\n          setUsersList(resp.data);\n          resolve(resp.data[0].id);\n        } else {\n          reject(\"No users data available\");\n        }\n      });\n    });\n  }\n\n\n  /* const fetchUsers = ()=> {\n    //fetch(\"http://localhost:3000/users\")\n    fetch(domain + \"/users\")\n    .then(response => response.json())\n    .then(resp => {\n      if(resp && resp.data){\n        //var usersList = setUsersList(resp.data);\n        setUsersList(resp.data);\n        //setEvents(events);\n      }\n    });\n  } */\n\n  const generateEventsSource = (eventsColl) => {\n    var events = [];\n    eventsColl.forEach(element => {\n      var event = {};\n      element.id && (event.Id = element.id);\n      element.end && (event.EndTime = (new Date(element.end)).toString())\n      element.start && (event.StartTime = (new Date(element.start)).toString())\n      element.subject && (event.Subject = element.subject)\n      element.location && (event.Location = element.location)\n      element.description && (event.Description = element.description)\n      element.isRecurring && (event.Repeat = true)\n      element.repeatPattern && (event.RecurrenceRule = element.repeatPattern)\n      events.push(event);\n    });\n    return events;\n  }\n\n  const getEventObject = (eventData) => {\n    var event = {};\n    eventData.id && (event.id = eventData.id);\n    eventData.EndTime && (event.end = (new Date(eventData.EndTime)).toString())\n    eventData.StartTime && (event.start = (new Date(eventData.StartTime)).toString())\n    eventData.Subject && (event.subject = eventData.Subject)\n    eventData.Location && (event.location = eventData.Location)\n    eventData.Description && (event.description = eventData.Description)\n    eventData.RecurrenceRule && (event.isRecurring = true)\n    eventData.RecurrenceRule && (event.repeatPattern = eventData.RecurrenceRule)\n    return event;\n  }\n\n  const validateDates = (startDate, endDate) => {\n    var isValid = false;\n     if( (new Date(startDate) !== \"Invalid Date\") && !isNaN(new Date(startDate)) \n          && (new Date(endDate) !== \"Invalid Date\") && !isNaN(new Date(endDate)) ){\n            isValid = true;\n      } else {\n        alert(\"Invalid Date format.\");\n      }\n      \n      if(new Date(startDate) > new Date(endDate)){\n        alert(\"Start date should not be greater than end date.\");\n        isValid = false;\n      }\n      return isValid;\n  }\n\n  const addEventToServer = (eventData, currentSchedule) => {\n    if(validateDates(eventData.StartTime, eventData.EndTime)){\n  var eventObj = getEventObject(eventData);\n    //use this to get until field value in a proper date format\n    //document.querySelector('.e-until-date').ej2_instances[0].value; \n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain +\"/calendar/events?facultyId=\"+currentUser, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: eventBody\n    })\n    .then(res => res.json())\n    .then((resp) => {\n      if(resp.status == 403){\n        alert(\"Faculty not available for the selected date-time.\");\n      } else if(resp.status == 200){\n        eventData.Id = resp.id;\n        currentSchedule.addEvent(eventData);\n      }\n    })\n    .catch((err) => {\n      console.log(\"Err: \" + err);\n    });\n    dialogClose();\n  }\n}\n\n  const deleteEventInServer = (eventData) => {\n    var id = eventData.Id;\n    fetch(domain + '/calendar/events/'+id+\"?facultyId=\"+currentUser, {\n      method: 'DELETE',\n    })\n    .then(res => res.json())\n    .then((resp) => {\n      if(resp && resp.status == 400){\n        alert(resp.message);\n      } else if(resp && resp.status == 200){\n        currentSchedule.deleteEvent(eventData);\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  /* const deleteEventInServer = (eventData) => {\n    var id = eventData.Id;\n    fetch(domain + '/events/id='+id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      }\n    })\n    .then((res) => {\n      currentSchedule.deleteEvent(eventData);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  } */\n\n  const updateEventToServer = (eventData, currentSchedule) => {\n    var id = currentEvent.Id;\n    var eventObj = getEventObject(eventData);\n    eventObj.id = id;\n    eventData.Id = id;\n    var eventBody = JSON.stringify(eventObj);\n    fetch(domain + '/calendar/events/'+id+\"?facultyId=\"+currentUser, {\n      method: 'PUT',\n       headers: {\n         'Content-Type': 'application/json'\n       },\n      body: eventBody\n    })\n    .then((res) => {\n      if(res.status == 403){\n        alert(\"Faculty not available for the selected date-time.\");\n      } else {\n        currentSchedule.saveEvent(eventData);\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  }\n\n  const addSyncfusionScheduler = () => {\n    return (<div>\n      <ScheduleComponent currentView='Week' \n      ref={schedule => scheduleObj = schedule} \n      eventSettings={{dataSource: events}} \n      showQuickInfo={false} \n      showRecurrenceAlert={false}\n      popupOpen = {openPopUp.bind(this)} >\n      <ViewsDirective>\n        <ViewDirective option='Day' />\n        <ViewDirective option='Week' />\n        <ViewDirective option='Month' />\n      </ViewsDirective>\n      <Inject services={[Day, Week, Month, Agenda]} />\n      </ScheduleComponent>\n    </div>)\n  }\n\n  const openPopUp = (args) => {\n\n    if(args.type == 'RecurrenceAlert'){\n      //document.querySelector('.e-quick-alertok').hidden = true;\n      document.getElementsByClassName(\"e-quick-dialog-occurrence-event\").hidden = true;\n      //e-quick-dialog-occurrence-event\n    }\n\n    if (args.type === 'Editor' || args.type === 'QuickInfo') {\n      currentSchedule = scheduleObj;\n      currentEvent = args.type === 'QuickInfo'? scheduleObj.getEventDetails(args.target) : args.data;\n      let dialogObj = (args.element).ej2_instances[0];\n      let buttons;\n\n      //hide timezone and all day fields for now.\n      document.querySelector('.e-all-day-container').hidden = true;\n      document.querySelector('.e-time-zone-container').hidden = true;\n      if (args.target.classList.contains('e-appointment')) {\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: editEvent.bind(this)\n        }, {\n          buttonModel: { content: 'DELETE', cssClass: 'e-event-delete' }, click: eventDelete.bind(this)\n        },\n        {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      } else {\n        //currentEvent = scheduleObj.getEventDetails(args.target);\n        buttons = [{\n          buttonModel: { content: 'SAVE', isPrimary: true }, click: eventAdd.bind(this)\n        }, {\n          buttonModel: { content: 'CANCEL', cssClass: 'e-event-cancel' }, click: dialogClose.bind(this)\n        }];\n      }\n      \n      dialogObj.buttons = buttons;\n      dialogObj.dataBind();\n    }\n  }\n\n   const eventDelete = (e)=> {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.activeEventData.event;\n    deleteEventInServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const eventAdd = (e) => {\n    var tes = currentSchedule;\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    addEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n\n  const editEvent = (e)=> {\n    const eventData = currentSchedule.eventWindow.getObjectFromFormData('e-schedule-dialog');\n    eventData.RecurrenceRule = document.querySelector('.e-recurrenceeditor').ej2_instances[0].value; \n    updateEventToServer(eventData, currentSchedule);\n    dialogClose();\n  }\n  const dialogClose = ()=> {\n    let dialogObj = (document.querySelector('.e-schedule-dialog')).ej2_instances[0];\n    dialogObj.hide();\n  }\n\n  return (\n    <>\n      {/* adwa version */}\n      {/* <CalendarAdminBar currentUser={currentUser} setCurrentUser={setCurrentUser} /> */}\n      <CalendarAdminBar currentUser={currentUser} setCurrentUser={setCurrentUser} usersList={usersList} setUsersList={setUsersList} />\n      {/* <div className=\"App\">\n        <UserDropDown/>\n        <AddUser/>\n        <AddWorkHours/>\n      </div> */}\n      <div>{addSyncfusionScheduler()}</div>\n    </>\n  );\n}\n\n//use this for isBlock feature\n//https://ej2.syncfusion.com/aspnetmvc/documentation/schedule/appointments/?no-cache=1\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}