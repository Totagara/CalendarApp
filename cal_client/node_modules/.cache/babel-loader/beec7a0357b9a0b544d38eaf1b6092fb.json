{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DatePicker from 'react-datepicker';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n/* export const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  userListItems,\n}) => {\n  const [userList, setUserList] = useState([]);\n  return (\n    <>\n      <UserDropDown\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        userList={userListItems}\n      />\n      <AddUser userList={userList} setUserList={setUserList} />\n      <AddWorkHours />\n    </>\n  );\n}; */\n\nexport const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  usersList,\n  setUsersList\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserDropDown, {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    usersList: usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddUser, {\n    usersList: usersList,\n    setUsersList: setUsersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddWorkHours, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst UserDropDown = ({\n  currentUser,\n  setCurrentUser,\n  usersList\n}) => {\n  const [user, setUsers] = useState([]);\n  const classes = useStyles();\n\n  const handleSelectionChange = e => {\n    setCurrentUser(e.target.value);\n    var x = 10;\n    var y = x;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Current User\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    defaultValue: \"\",\n    id: \"grouped-native-select\",\n    onChange: handleSelectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, usersList.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }\n  }, user.name)))));\n};\n\nconst AddUser = ({\n  usersList,\n  setUsersList\n}) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = userObj => {\n    //var eventObj = getEventObject(eventData);\n    var userBody = JSON.stringify(userObj);\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: userBody\n    }).then(res => {\n      userObj.id = res.status;\n      setUsersList([...usersList, userObj]);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n  };\n\n  const closeDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    name.current.value = '';\n    email.current.value = '';\n    phone.current.value = '';\n    location.current.value = '';\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n      addUserPopUp.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Add user\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addUserDialog\",\n    class: \"modal addUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, \"User Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    key: \"name\",\n    label: \"Name\",\n    inputRef: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"email\",\n    label: \"Email\",\n    inputRef: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"phone\",\n    label: \"Phone\",\n    inputRef: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"location\",\n    label: \"Location\",\n    inputRef: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      // var modalPopUp = document.getElementsByClassName(\"modal\")[0];\n      // modalPopUp.style.display = \"none\";\n      // var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n      // addUserPopUp.style.display = \"none\";\n      closeDialog(\"addUser\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault(); //alert(\"save data\");\n      //var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n\n      var userObj = {};\n      userObj.name = name.current.value;\n      userObj.email = email.current.value;\n      userObj.phone = phone.current.value;\n      userObj.location = location.current.value;\n      addNewUser(userObj);\n      closeDialog(\"addUser\"); //setUsersList([usersList..., {items}])\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }, \"Save\")))); // return (\n  //     <div className=\"App\">\n  //         <button id=\"addUserBtn\" onClick=\"handleAddUser()\">\n  //             Add User\n  //         </button>\n  //         <div id=\"myModal\" class=\"modal\">\n  //             <div class=\"modal-content\">\n  //                 <p>Some text in the Modal..</p>\n  //                 <button id=\"closeBut\" onclick={() => {\n  //                     var modalPopUp = document.getElementsByClassName(\"modal\");\n  //                     modalPopUp.style.display = \"none\";\n  //                 }} />\n  //                 <button id=\"saveBut\" onclick={() => {\n  //                     alert('save data');\n  //                 }} />\n  //             </div>\n  //         </div>\n  //     </div>\n  // );\n};\n\nconst handleAddUser = () => {\n  var modalPopUp = document.getElementsByClassName(\"modal\");\n  modalPopUp.style.display = \"block\";\n};\n\nconst AddWorkHours = () => {\n  const classes = useStyles();\n  const [startTime, setStartTime] = React.useState(new Date());\n  const [endTime, setEndTime] = React.useState(new Date());\n  const checkedSun = useRef(\"\");\n  const checkedMon = useRef(\"\");\n  const checkedTue = useRef(\"\");\n  const checkedWed = useRef(\"\");\n  const checkedThu = useRef(\"\");\n  const checkedFri = useRef(\"\");\n  const checkedSat = useRef(\"\");\n  const startTimeTextField = useRef(\"\");\n  const endTimeTextField = useRef(\"\");\n\n  const closeWorkHoursDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    startTimeTextField.current.value = '';\n    endTimeTextField.current.value = '';\n  };\n\n  const updateWorkHours = workHoursObj => {\n    //var eventObj = getEventObject(eventData);\n    var userBody = JSON.stringify(userObj);\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: userBody\n    }).then(res => {\n      userObj.id = res.status;\n      setUsersList([...usersList, userObj]);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n      addWorkHoursPopup.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }\n  }, \"Add Work hours\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addWorkHoursDialog\",\n    class: \"modal addWorkHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"User Work hours Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: startTimeTextField,\n    id: \"startTime\",\n    label: \"Start time\",\n    type: \"time\",\n    defaultValue: \"08:00\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: endTimeTextField,\n    id: \"endTime\",\n    label: \"End time\",\n    type: \"time\",\n    defaultValue: \"05:00\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSun // checked={state.checkedSun}\n      // onChange={handleCheckBoxChange}\n      ,\n      name: \"checkedSun\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }),\n    label: \"Sunday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedMon,\n      name: \"checkedMon\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 21\n      }\n    }),\n    label: \"Monday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedTue,\n      name: \"checkedTue\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }),\n    label: \"Tuesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedWed,\n      name: \"checkedWed\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }\n    }),\n    label: \"Wednesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedThu,\n      name: \"checkedThu\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 21\n      }\n    }),\n    label: \"Thursday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedFri,\n      name: \"checkedFri\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 21\n      }\n    }),\n    label: \"Friday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSat,\n      name: \"checkedSat\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }),\n    label: \"Saturday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n      modalPopUp.style.display = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault(); //alert(\"save data\");\n      //var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n\n      var workHoursObj = {};\n      workHoursObj.freqPattern = \"FREQ=WEEKLY;\"; //var freqPattern = \"FREQ=WEEKLY;\";\n\n      var days = [];\n      var startTf = startTimeTextField;\n      var endTf = endTimeTextField;\n      checkedSun.current.checked && days.push(\"SU\");\n      checkedMon.current.checked && days.push(\"MO\");\n      checkedTue.current.checked && days.push(\"TU\");\n      checkedWed.current.checked && days.push(\"WE\");\n      checkedThu.current.checked && days.push(\"TH\");\n      checkedFri.current.checked && days.push(\"FR\");\n      checkedSat.current.checked && days.push(\"SA\");\n      workHoursObj.startTimeVal = startTimeTextField.current.value;\n      workHoursObj.endTimeVal = endTimeTextField.current.value;\n      workHoursObj.daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n      workHoursObj.intervalPattern = \"INTERVAL=1\";\n      addWorkHours(workHoursObj);\n      closeWorkHoursDialog(\"addWorkHours\"); //alert(\"save data\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js"],"names":["React","useState","useRef","Button","Select","makeStyles","InputLabel","FormControl","TextField","FormControlLabel","Checkbox","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","Grid","DatePicker","useStyles","theme","formControl","margin","spacing","minWidth","CalendarAdminBar","currentUser","setCurrentUser","usersList","setUsersList","UserDropDown","user","setUsers","classes","handleSelectionChange","e","target","value","x","y","map","id","name","AddUser","email","phone","location","addNewUser","userObj","userBody","JSON","stringify","fetch","method","headers","body","then","res","status","catch","err","console","log","closeDialog","className","popUp","document","getElementsByClassName","style","display","current","justifyContent","addUserPopUp","preventDefault","handleAddUser","modalPopUp","AddWorkHours","startTime","setStartTime","Date","endTime","setEndTime","checkedSun","checkedMon","checkedTue","checkedWed","checkedThu","checkedFri","checkedSat","startTimeTextField","endTimeTextField","closeWorkHoursDialog","updateWorkHours","workHoursObj","addWorkHoursPopup","textField","shrink","step","freqPattern","days","startTf","endTf","checked","push","startTimeVal","endTimeVal","daysPattern","join","intervalPattern","addWorkHours"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Grid from '@material-ui/core/Grid';\nimport DatePicker from 'react-datepicker';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n/* export const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  userListItems,\n}) => {\n  const [userList, setUserList] = useState([]);\n  return (\n    <>\n      <UserDropDown\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        userList={userListItems}\n      />\n      <AddUser userList={userList} setUserList={setUserList} />\n      <AddWorkHours />\n    </>\n  );\n}; */\n\nexport const CalendarAdminBar = ({ currentUser, setCurrentUser, usersList, setUsersList}) => {\n    return (\n      <>\n        <UserDropDown\n          currentUser={currentUser}\n          setCurrentUser={setCurrentUser}\n          usersList={usersList}\n        />\n        <AddUser usersList={usersList} setUsersList={setUsersList} />\n        <AddWorkHours />\n      </>\n    );\n  };\n\nconst UserDropDown = ({ currentUser, setCurrentUser, usersList}) => {\n  const [user, setUsers] = useState([]);\n\n  const classes = useStyles();\n\n  const handleSelectionChange = (e) => {\n    setCurrentUser(e.target.value);\n    var x =10;\n    var y = x;\n  }\n\n  return (\n    <div className=\"App\">\n        <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\"\n        onChange={handleSelectionChange}>\n            {usersList.map((user) => <option key={user.id} value={user.id}>{user.name}</option>)}\n        </Select>\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\">\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"Category 1\">\n            <option value={1}>Option 1</option>\n            <option value={2}>Option 2</option>\n          </optgroup>\n          <optgroup label=\"Category 2\">\n            <option value={3}>Option 3</option>\n            <option value={4}>Option 4</option>\n          </optgroup>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nconst AddUser = ({usersList, setUsersList}) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = (userObj) => {\n    //var eventObj = getEventObject(eventData);\n      var userBody = JSON.stringify(userObj);\n      fetch('http://localhost:3000/users', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: userBody\n      })\n      .then((res) => {\n        userObj.id = res.status;\n        setUsersList([...usersList, userObj]);\n      })\n      .catch((err) => {\n        console.log(\"Err: \" + err);\n      });\n  }\n\n  const closeDialog = (className) => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    name.current.value = '';\n    email.current.value = '';\n    phone.current.value = '';\n    location.current.value = '';\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            \n            var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n            addUserPopUp.style.display = \"block\";\n          }}\n        >\n          Add user\n        </Button>\n      </FormControl>\n\n      {/* <div id=\"myModal\" class=\"modal\"> */}\n      <div id=\"addUserDialog\" class=\"modal addUser\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Details:\n            </InputLabel>\n            <FormControl className={classes.formControl}>\n              <TextField  key=\"name\" label=\"Name\" inputRef={name} />\n              <TextField  key=\"email\" label=\"Email\" inputRef={email}/>\n              <TextField  key=\"phone\" label=\"Phone\" inputRef={phone}/>\n              <TextField  key=\"location\" label=\"Location\" inputRef={location}/>\n            </FormControl>\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              // var modalPopUp = document.getElementsByClassName(\"modal\")[0];\n              // modalPopUp.style.display = \"none\";\n              // var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n              // addUserPopUp.style.display = \"none\";\n              closeDialog(\"addUser\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              //alert(\"save data\");\n              //var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n              var userObj = {};\n              userObj.name = name.current.value;\n              userObj.email = email.current.value;\n              userObj.phone = phone.current.value;\n              userObj.location = location.current.value;\n              addNewUser(userObj);\n              closeDialog(\"addUser\");\n              //setUsersList([usersList..., {items}])\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  // return (\n  //     <div className=\"App\">\n  //         <button id=\"addUserBtn\" onClick=\"handleAddUser()\">\n  //             Add User\n  //         </button>\n  //         <div id=\"myModal\" class=\"modal\">\n  //             <div class=\"modal-content\">\n  //                 <p>Some text in the Modal..</p>\n  //                 <button id=\"closeBut\" onclick={() => {\n  //                     var modalPopUp = document.getElementsByClassName(\"modal\");\n  //                     modalPopUp.style.display = \"none\";\n  //                 }} />\n  //                 <button id=\"saveBut\" onclick={() => {\n  //                     alert('save data');\n  //                 }} />\n  //             </div>\n  //         </div>\n  //     </div>\n  // );\n};\n\nconst handleAddUser = () => {\n  var modalPopUp = document.getElementsByClassName(\"modal\");\n  modalPopUp.style.display = \"block\";\n};\n\nconst AddWorkHours = () => {\n    const classes = useStyles();\n    const [startTime, setStartTime] = React.useState(new Date());\n    const [endTime, setEndTime] = React.useState(new Date());\n\n    const checkedSun = useRef(\"\");\n    const checkedMon = useRef(\"\");\n    const checkedTue = useRef(\"\");\n    const checkedWed = useRef(\"\");\n    const checkedThu = useRef(\"\");\n    const checkedFri = useRef(\"\");\n    const checkedSat = useRef(\"\");\n    const startTimeTextField = useRef(\"\");\n    const endTimeTextField = useRef(\"\");\n\n    const closeWorkHoursDialog = (className) => {\n      var popUp = document.getElementsByClassName(className)[0];\n      popUp.style.display = \"none\";\n      startTimeTextField.current.value = '';\n      endTimeTextField.current.value = '';\n    }\n\n    const updateWorkHours = (workHoursObj) => {\n      //var eventObj = getEventObject(eventData);\n        var userBody = JSON.stringify(userObj);\n        fetch('http://localhost:3000/users', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n          body: userBody\n        })\n        .then((res) => {\n          userObj.id = res.status;\n          setUsersList([...usersList, userObj]);\n        })\n        .catch((err) => {\n          console.log(\"Err: \" + err);\n        });\n    }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n            addWorkHoursPopup.style.display = \"block\";\n          }}\n        >\n          Add Work hours\n        </Button>\n      </FormControl>\n      <div id=\"addWorkHoursDialog\" class=\"modal addWorkHours\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Work hours Details:\n            </InputLabel>\n            {/* <FormControl className={classes.formControl}>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"grouped-native-select\">Start Day</InputLabel>\n                    <Select native defaultValue=\"\" id=\"grouped-native-select\">\n                        <option value={1}>Sunday</option>\n                        <option value={2}>Monday</option>\n                        <option value={3}>Tuesday</option>\n                        <option value={4}>Wednessday</option>\n                        <option value={2}>Thursday</option>\n                        <option value={3}>Friday</option>\n                        <option value={4}>Saturday</option>\n                    </Select>\n                </FormControl>  \n                <form class=\"clock-textField clock-container\" noValidate>\n                    <TextField\n                        id=\"endTime\"\n                        label=\"End time\"\n                        type=\"time\"\n                        defaultValue=\"05:00\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n                </form>\n\n                \n                \n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor=\"grouped-native-select\">End Day</InputLabel>\n                    <Select native defaultValue=\"\" id=\"grouped-native-select\">\n                        <option value={1}>Sunday</option>\n                        <option value={2}>Monday</option>\n                        <option value={3}>Tuesday</option>\n                        <option value={4}>Wednessday</option>\n                        <option value={2}>Thursday</option>\n                        <option value={3}>Friday</option>\n                        <option value={4}>Saturday</option>\n                    </Select>\n                </FormControl>  \n                <form class=\"clock-textField clock-container\" noValidate>\n                    <TextField\n                        id=\"startTime\"\n                        label=\"Start time\"\n                        type=\"time\"\n                        defaultValue=\"08:00\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n                </form>\n            </FormControl> */}\n\n            <FormControl className={classes.formControl}>\n                <FormControl className={classes.formControl}>\n                {/* <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.checkedB}\n                      onChange={handleChange}\n                      name=\"checkedB\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Primary\"\n                /> */}\n                {/* <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={name}\n                      checked={state.checkedSun}\n                      onChange={handleCheckBoxChange}\n                      name=\"checkedSun\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Sunday\"\n                /> */}\n\n                <form class=\"clock-textField clock-container\" noValidate>\n                      <TextField\n                          inputRef={startTimeTextField}\n                          id=\"startTime\"\n                          label=\"Start time\"\n                          type=\"time\"\n                          defaultValue=\"08:00\"\n                          className={classes.textField}\n                          InputLabelProps={{\n                          shrink: true,\n                          }}\n                          inputProps={{\n                          step: 300, // 5 min\n                          }}\n                      />\n                  </form>\n                  <form class=\"clock-textField clock-container\" noValidate>\n                    <TextField\n                        inputRef={endTimeTextField}\n                        id=\"endTime\"\n                        label=\"End time\"\n                        type=\"time\"\n                        defaultValue=\"05:00\"\n                        className={classes.textField}\n                        InputLabelProps={{\n                        shrink: true,\n                        }}\n                        inputProps={{\n                        step: 300, // 5 min\n                        }}\n                    />\n                  </form>\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSun}\n                      // checked={state.checkedSun}\n                      // onChange={handleCheckBoxChange}\n                      name=\"checkedSun\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Sunday\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedMon}\n                      name=\"checkedMon\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Monday\"\n                />\n\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedTue}\n                      name=\"checkedTue\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Tuesday\"\n                />\n\n                \n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedWed}\n                      name=\"checkedWed\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Wednesday\"\n                />\n\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedThu}\n                      name=\"checkedThu\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Thursday\"\n                />\n\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedFri}\n                      name=\"checkedFri\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Friday\"\n                />\n\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSat}\n                      name=\"checkedSat\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Saturday\"\n                />\n\n                  \n                </FormControl>  \n            </FormControl>\n\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n              modalPopUp.style.display = \"none\";\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              //alert(\"save data\");\n              //var addUserPopUp = document.getElementsByClassName(\"addUser\")[0];\n              var workHoursObj = {};\n              workHoursObj.freqPattern = \"FREQ=WEEKLY;\";\n              //var freqPattern = \"FREQ=WEEKLY;\";\n              var days = [];\n              var startTf = startTimeTextField;\n              var endTf = endTimeTextField;\n              (checkedSun.current.checked) && (days.push(\"SU\"));\n              (checkedMon.current.checked) && (days.push(\"MO\"));\n              (checkedTue.current.checked) && (days.push(\"TU\"));\n              (checkedWed.current.checked) && (days.push(\"WE\"));\n              (checkedThu.current.checked) && (days.push(\"TH\"));\n              (checkedFri.current.checked) && (days.push(\"FR\"));\n              (checkedSat.current.checked) && (days.push(\"SA\"));\n              workHoursObj.startTimeVal = startTimeTextField.current.value;\n              workHoursObj.endTimeVal = endTimeTextField.current.value;\n              workHoursObj.daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n              workHoursObj.intervalPattern = \"INTERVAL=1\"; \n              addWorkHours(workHoursObj);\n              closeWorkHoursDialog(\"addWorkHours\");\n              //alert(\"save data\");\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}