{"ast":null,"code":"var _jsxFileName = \"/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js\";\nimport React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport const CalendarAdminBar = ({\n  currentUser,\n  setCurrentUser,\n  usersList,\n  setUsersList\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserDropDown, {\n    currentUser: currentUser,\n    setCurrentUser: setCurrentUser,\n    usersList: usersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddUser, {\n    usersList: usersList,\n    setUsersList: setUsersList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddWorkHours, {\n    currentUser: currentUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst UserDropDown = ({\n  currentUser,\n  setCurrentUser,\n  usersList\n}) => {\n  //const [user, setUsers] = useState([]);\n  //const [selectedValue, setSelectedValue] = useState(\"\");\n  const classes = useStyles();\n\n  const handleSelectionChange = e => {\n    setCurrentUser(e.target.value);\n    /* if(usersList.length){\n      var index = usersList.findIndex((user) => user.id == e.target.value);\n      if(index >= 0){\n        setSelectedValue(usersList[index]);\n      }\n    } */\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Current User\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    defaultValue: \"\",\n    id: \"grouped-native-select\" // value = {selectedValue}\n    ,\n    onChange: handleSelectionChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, usersList.map(user => /*#__PURE__*/React.createElement(\"option\", {\n    key: user.id,\n    value: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 36\n    }\n  }, user.name)))));\n};\n\nconst AddUser = ({\n  usersList,\n  setUsersList\n}) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = userObj => {\n    var userBody = JSON.stringify(userObj);\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: userBody\n    }).then(res => res.json()).then(res => {\n      userObj.id = res.userId;\n      setUsersList([...usersList, userObj]);\n    }).catch(err => {\n      console.log(\"Err: \" + err);\n    });\n  };\n\n  const closeDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n\n    if (popUp) {\n      popUp.style.display = \"none\";\n      name.current.value = '';\n      email.current.value = '';\n      phone.current.value = '';\n      location.current.value = '';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n      addUserPopUp.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Add user\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addUserDialog\",\n    class: \"modal addUser\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"User Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    key: \"name\",\n    label: \"Name\",\n    inputRef: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"email\",\n    label: \"Email\",\n    inputRef: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"phone\",\n    label: \"Phone\",\n    inputRef: phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    key: \"location\",\n    label: \"Location\",\n    inputRef: location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      closeDialog(\"addUser\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      var userObj = {};\n      userObj.name = name.current.value;\n      userObj.email = email.current.value;\n      userObj.phone = phone.current.value;\n      userObj.location = location.current.value;\n      addNewUser(userObj);\n      closeDialog(\"addUser\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};\n\nconst AddWorkHours = ({\n  currentUser\n}) => {\n  const classes = useStyles(); //const [startTime, setStartTime] = React.useState(new Date().getHours());\n  //const [endTime, setEndTime] = React.useState(new Date().getHours()+1);\n  //check box states\n\n  const [state, setState] = React.useState({\n    checkedSun: false,\n    checkedMon: true,\n    checkedTue: true,\n    checkedWed: true,\n    checkedThu: true,\n    checkedFri: true,\n    checkedSat: false\n  });\n\n  const handleCheckBoxChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  }; //const checkedSunRef = useRef(\"\");\n\n\n  const checkedSunRef = useRef(state.checkedSun); //const checkedMonRef = useRef(\"\");\n\n  const checkedMonRef = useRef(state.checkedMon);\n  const checkedTueRef = useRef(state.checkedTue);\n  const checkedWedRef = useRef(state.checkedWed);\n  const checkedThuRef = useRef(state.checkedThu);\n  const checkedFriRef = useRef(state.checkedFri);\n  const checkedSatRef = useRef(state.checkedSat);\n  const startTimeTextField = useRef(\"\");\n  const endTimeTextField = useRef(\"\");\n  const blockerNote = useRef(\"\");\n\n  const closeWorkHoursDialog = className => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\"; //startTimeTextField.current.value = '';\n    //endTimeTextField.current.value = '';\n\n    blockerNote.current.value = '';\n  };\n\n  const updateWorkHours = workHoursObj => {\n    //var eventObj = getEventObject(eventData);\n    if (currentUser) {\n      var workHoursBody = JSON.stringify(workHoursObj);\n      fetch('http://localhost:3000/users/workhours/' + currentUser, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: workHoursBody\n      }).then(res => {\n        console.log(\"User work hours updated.\");\n      }).catch(err => {\n        console.log(\"Error during User work hours updatation. Err: \" + err);\n      });\n    } else {\n      alert(\"User not selected\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    style: {\n      justifyContent: \"center\"\n    },\n    onClick: () => {\n      var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n      addWorkHoursPopup.style.display = \"block\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }\n  }, \"Add Work hours\")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addWorkHoursDialog\",\n    class: \"modal addWorkHours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"grouped-native-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"User Work hours Details:\"), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: startTimeTextField,\n    id: \"startTime\",\n    label: \"Start time\",\n    type: \"time\",\n    defaultValue: \"08:00\" //value = {startTime}\n    ,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    class: \"clock-textField clock-container\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    inputRef: endTimeTextField,\n    id: \"endTime\",\n    label: \"End time\",\n    type: \"time\",\n    defaultValue: \"05:00\" //value = {endTime}\n    ,\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    inputProps: {\n      step: 300 // 5 min\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    key: \"blockerNote\",\n    label: \"Blocker note\",\n    inputRef: blockerNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSunRef,\n      checked: state.checkedSun,\n      onChange: handleCheckBoxChange,\n      name: \"checkedSun\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }\n    }),\n    label: \"Sunday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: state.checkedMon,\n      onChange: handleCheckBoxChange,\n      inputRef: checkedMonRef,\n      name: \"checkedMon\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }\n    }),\n    label: \"Monday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedTueRef,\n      name: \"checkedTue\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }\n    }),\n    label: \"Tuesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedWedRef,\n      name: \"checkedWed\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 21\n      }\n    }),\n    label: \"Wednesday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedThuRef,\n      name: \"checkedThu\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 21\n      }\n    }),\n    label: \"Thursday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedFriRef,\n      name: \"checkedFri\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }),\n    label: \"Friday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      inputRef: checkedSatRef,\n      name: \"checkedSat\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }),\n    label: \"Saturday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: () => {\n      var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n      modalPopUp.style.display = \"none\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      var workHoursObj = {};\n      var days = [];\n      checkedSunRef.current.checked && days.push(\"SU\");\n      checkedMonRef.current.checked && days.push(\"MO\");\n      checkedTueRef.current.checked && days.push(\"TU\");\n      checkedWedRef.current.checked && days.push(\"WE\");\n      checkedThuRef.current.checked && days.push(\"TH\");\n      checkedFriRef.current.checked && days.push(\"FR\");\n      checkedSatRef.current.checked && days.push(\"SA\"); //Start date time value\n\n      var curDate = new Date();\n      var startTimeVal = startTimeTextField.current.value;\n      curDate.setHours(startTimeVal.split(\":\")[0]);\n      curDate.setMinutes(startTimeVal.split(\":\")[1]);\n      curDate.setSeconds(0);\n      workHoursObj.start = curDate.toISOString(); //Start date time value\n\n      var endTimeValue = endTimeTextField.current.value;\n      curDate.setHours(endTimeValue.split(\":\")[0]);\n      curDate.setMinutes(endTimeValue.split(\":\")[1]);\n      curDate.setSeconds(0);\n      workHoursObj.end = curDate.toISOString();\n      var freqPattern = \"FREQ=WEEKLY;\";\n\n      if (days.length == 0 || !workHoursObj.start || !workHoursObj.end) {\n        alert(\"Valid work hours days and time is required.\");\n      } else {\n        var daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n        var intervalPattern = \"INTERVAL=1;\";\n        workHoursObj.pattern = freqPattern + daysPattern + intervalPattern;\n        workHoursObj.blockerNote = blockerNote.current.value;\n        updateWorkHours(workHoursObj);\n        closeWorkHoursDialog(\"addWorkHours\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n};","map":{"version":3,"sources":["/Users/geethakardahally/Desktop/Devaraj/Coding/JS_React/CreateLearn/cal_client/src/UserManagement.js"],"names":["React","useState","useRef","Button","Select","makeStyles","InputLabel","FormControl","TextField","FormControlLabel","Checkbox","useStyles","theme","formControl","margin","spacing","minWidth","CalendarAdminBar","currentUser","setCurrentUser","usersList","setUsersList","UserDropDown","classes","handleSelectionChange","e","target","value","map","user","id","name","AddUser","email","phone","location","addNewUser","userObj","userBody","JSON","stringify","fetch","method","headers","body","then","res","json","userId","catch","err","console","log","closeDialog","className","popUp","document","getElementsByClassName","style","display","current","justifyContent","addUserPopUp","preventDefault","AddWorkHours","state","setState","checkedSun","checkedMon","checkedTue","checkedWed","checkedThu","checkedFri","checkedSat","handleCheckBoxChange","event","checked","checkedSunRef","checkedMonRef","checkedTueRef","checkedWedRef","checkedThuRef","checkedFriRef","checkedSatRef","startTimeTextField","endTimeTextField","blockerNote","closeWorkHoursDialog","updateWorkHours","workHoursObj","workHoursBody","alert","addWorkHoursPopup","textField","shrink","step","modalPopUp","days","push","curDate","Date","startTimeVal","setHours","split","setMinutes","setSeconds","start","toISOString","endTimeValue","end","freqPattern","length","daysPattern","join","intervalPattern","pattern"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Select from \"@material-ui/core/Select\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport const CalendarAdminBar = ({ currentUser, setCurrentUser, usersList, setUsersList }) => {\n  return (\n    <>\n      <UserDropDown\n        currentUser={currentUser}\n        setCurrentUser={setCurrentUser}\n        usersList={usersList}\n      />\n      <AddUser usersList={usersList} setUsersList={setUsersList} />\n      <AddWorkHours currentUser={currentUser} />\n    </>\n  );\n};\n\nconst UserDropDown = ({ currentUser, setCurrentUser, usersList }) => {\n  //const [user, setUsers] = useState([]);\n\n  //const [selectedValue, setSelectedValue] = useState(\"\");\n\n  const classes = useStyles();\n\n  const handleSelectionChange = (e) => {\n    setCurrentUser(e.target.value);\n    /* if(usersList.length){\n      var index = usersList.findIndex((user) => user.id == e.target.value);\n      if(index >= 0){\n        setSelectedValue(usersList[index]);\n      }\n    } */\n  }\n\n  return (\n    <div className=\"App\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\"\n          // value = {selectedValue}\n          onChange={handleSelectionChange}\n        >\n          {usersList.map((user) => <option key={user.id} value={user.id}>{user.name}</option>)}\n        </Select>\n      </FormControl>\n      {/* <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">Current User</InputLabel>\n        <Select native defaultValue=\"\" id=\"grouped-native-select\">\n          <option aria-label=\"None\" value=\"\" />\n          <optgroup label=\"Category 1\">\n            <option value={1}>Option 1</option>\n            <option value={2}>Option 2</option>\n          </optgroup>\n          <optgroup label=\"Category 2\">\n            <option value={3}>Option 3</option>\n            <option value={4}>Option 4</option>\n          </optgroup>\n        </Select>\n      </FormControl> */}\n    </div>\n  );\n};\n\nconst AddUser = ({ usersList, setUsersList }) => {\n  const name = useRef(\"\");\n  const email = useRef(\"\");\n  const phone = useRef(\"\");\n  const location = useRef(\"\");\n  const classes = useStyles();\n\n  const addNewUser = (userObj) => {\n    var userBody = JSON.stringify(userObj);\n    fetch('http://localhost:3000/users', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: userBody\n    })\n      .then(res => res.json())\n      .then((res) => {\n        userObj.id = res.userId;\n        setUsersList([...usersList, userObj]);\n      })\n      .catch((err) => {\n        console.log(\"Err: \" + err);\n      });\n  }\n\n  const closeDialog = (className) => {\n    var popUp = document.getElementsByClassName(className)[0];\n    if (popUp) {\n      popUp.style.display = \"none\";\n      name.current.value = '';\n      email.current.value = '';\n      phone.current.value = '';\n      location.current.value = '';\n    }\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            var addUserPopUp = document.getElementsByClassName(\"modal\")[0];\n            addUserPopUp.style.display = \"block\";\n          }}\n        >\n          Add user\n        </Button>\n      </FormControl>\n\n      {/* <div id=\"myModal\" class=\"modal\"> */}\n      <div id=\"addUserDialog\" class=\"modal addUser\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Details:\n            </InputLabel>\n            <FormControl className={classes.formControl}>\n              <TextField key=\"name\" label=\"Name\" inputRef={name} />\n              <TextField key=\"email\" label=\"Email\" inputRef={email} />\n              <TextField key=\"phone\" label=\"Phone\" inputRef={phone} />\n              <TextField key=\"location\" label=\"Location\" inputRef={location} />\n            </FormControl>\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              closeDialog(\"addUser\");\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              var userObj = {};\n              userObj.name = name.current.value;\n              userObj.email = email.current.value;\n              userObj.phone = phone.current.value;\n              userObj.location = location.current.value;\n              addNewUser(userObj);\n              closeDialog(\"addUser\");\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddWorkHours = ({ currentUser }) => {\n  const classes = useStyles();\n  //const [startTime, setStartTime] = React.useState(new Date().getHours());\n  //const [endTime, setEndTime] = React.useState(new Date().getHours()+1);\n\n  //check box states\n  const [state, setState] = React.useState({\n    checkedSun: false,\n    checkedMon: true,\n    checkedTue: true,\n    checkedWed: true,\n    checkedThu: true,\n    checkedFri: true,\n    checkedSat: false,\n  });\n\n  const handleCheckBoxChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  //const checkedSunRef = useRef(\"\");\n  const checkedSunRef = useRef(state.checkedSun);\n  //const checkedMonRef = useRef(\"\");\n  const checkedMonRef = useRef(state.checkedMon);\n  const checkedTueRef = useRef(state.checkedTue);\n  const checkedWedRef = useRef(state.checkedWed);\n  const checkedThuRef = useRef(state.checkedThu);\n  const checkedFriRef = useRef(state.checkedFri);\n  const checkedSatRef = useRef(state.checkedSat);\n  const startTimeTextField = useRef(\"\");\n  const endTimeTextField = useRef(\"\");\n  const blockerNote = useRef(\"\");\n\n  const closeWorkHoursDialog = (className) => {\n    var popUp = document.getElementsByClassName(className)[0];\n    popUp.style.display = \"none\";\n    //startTimeTextField.current.value = '';\n    //endTimeTextField.current.value = '';\n    blockerNote.current.value = '';\n  }\n\n  const updateWorkHours = (workHoursObj) => {\n    //var eventObj = getEventObject(eventData);\n    if (currentUser) {\n      var workHoursBody = JSON.stringify(workHoursObj);\n      fetch('http://localhost:3000/users/workhours/' + currentUser, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n        body: workHoursBody\n      })\n        .then((res) => {\n          console.log(\"User work hours updated.\");\n        })\n        .catch((err) => {\n          console.log(\"Error during User work hours updatation. Err: \" + err);\n        });\n    } else {\n      alert(\"User not selected\");\n    }\n  }\n\n  return (\n    <div>\n      <FormControl className={classes.formControl}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          style={{ justifyContent: \"center\" }}\n          onClick={() => {\n            var addWorkHoursPopup = document.getElementsByClassName(\"addWorkHours\")[0];\n            addWorkHoursPopup.style.display = \"block\";\n          }}\n        >\n          Add Work hours\n        </Button>\n      </FormControl>\n      <div id=\"addWorkHoursDialog\" class=\"modal addWorkHours\">\n        <div class=\"modal-content\">\n          <div>\n            <InputLabel htmlFor=\"grouped-native-select\">\n              User Work hours Details:\n            </InputLabel>\n            <FormControl className={classes.formControl}>\n              <FormControl className={classes.formControl}>\n                <form class=\"clock-textField clock-container\" noValidate>\n                  <TextField\n                    inputRef={startTimeTextField}\n                    id=\"startTime\"\n                    label=\"Start time\"\n                    type=\"time\"\n                    defaultValue=\"08:00\"\n                    //value = {startTime}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    inputProps={{\n                      step: 300, // 5 min\n                    }}\n                  />\n                </form>\n                <form class=\"clock-textField clock-container\" noValidate>\n                  <TextField\n                    inputRef={endTimeTextField}\n                    id=\"endTime\"\n                    label=\"End time\"\n                    type=\"time\"\n                    defaultValue=\"05:00\"\n                    //value = {endTime}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    inputProps={{\n                      step: 300, // 5 min\n                    }}\n                  />\n                </form>\n                <TextField key=\"blockerNote\" label=\"Blocker note\" inputRef={blockerNote} />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSunRef}\n                      checked={state.checkedSun}\n                      onChange={handleCheckBoxChange}\n                      name=\"checkedSun\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Sunday\"\n                />\n\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.checkedMon}\n                      onChange={handleCheckBoxChange}\n                      inputRef={checkedMonRef}\n                      name=\"checkedMon\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Monday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedTueRef}\n                      name=\"checkedTue\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Tuesday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedWedRef}\n                      name=\"checkedWed\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Wednesday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedThuRef}\n                      name=\"checkedThu\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Thursday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedFriRef}\n                      name=\"checkedFri\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Friday\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      inputRef={checkedSatRef}\n                      name=\"checkedSat\"\n                      color=\"primary\"\n                    />\n                  }\n                  label=\"Saturday\"\n                />\n              </FormControl>\n            </FormControl>\n          </div>\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              var modalPopUp = document.getElementsByClassName(\"addWorkHours\")[0];\n              modalPopUp.style.display = \"none\";\n            }}\n          >\n            Close\n          </Button>\n          <Button\n            color=\"primary\"\n            onClick={(e) => {\n              e.preventDefault();\n              var workHoursObj = {};\n              var days = [];\n              (checkedSunRef.current.checked) && (days.push(\"SU\"));\n              (checkedMonRef.current.checked) && (days.push(\"MO\"));\n              (checkedTueRef.current.checked) && (days.push(\"TU\"));\n              (checkedWedRef.current.checked) && (days.push(\"WE\"));\n              (checkedThuRef.current.checked) && (days.push(\"TH\"));\n              (checkedFriRef.current.checked) && (days.push(\"FR\"));\n              (checkedSatRef.current.checked) && (days.push(\"SA\"));\n\n              //Start date time value\n              var curDate = new Date();\n              var startTimeVal = startTimeTextField.current.value;\n              curDate.setHours(startTimeVal.split(\":\")[0]);\n              curDate.setMinutes(startTimeVal.split(\":\")[1]);\n              curDate.setSeconds(0);\n              workHoursObj.start = curDate.toISOString();\n\n              //Start date time value\n              var endTimeValue = endTimeTextField.current.value;\n              curDate.setHours(endTimeValue.split(\":\")[0]);\n              curDate.setMinutes(endTimeValue.split(\":\")[1]);\n              curDate.setSeconds(0);\n              workHoursObj.end = curDate.toISOString();\n              var freqPattern = \"FREQ=WEEKLY;\";\n              if (days.length == 0 || !workHoursObj.start || !workHoursObj.end) {\n                alert(\"Valid work hours days and time is required.\");\n              } else {\n                var daysPattern = \"BYDAY=\" + days.join(\",\") + \";\";\n                var intervalPattern = \"INTERVAL=1;\";\n                workHoursObj.pattern = freqPattern + daysPattern + intervalPattern;\n                workHoursObj.blockerNote = blockerNote.current.value;\n                updateWorkHours(workHoursObj);\n                closeWorkHoursDialog(\"addWorkHours\");\n              }\n            }}\n          >\n            Save\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}